import React__default from 'react';
import MenuNavModuleCss from './index.module.css.js';
import { Nav } from '../Nav/index.js';
import { useLayout } from '../../modules/Layout.js';
import { useManager } from '../../modules/Manager.js';
import { useController } from '../../modules/Controller.js';
import { composeCssClasses } from '../../utils/composeCssClasses.js';

function MenuNav(props) {
    const { color, activeColor, position = {
        bottom: '0',
        left: '50%',
        transform: 'translateX(-50%)'
    }, justifyContent = 'center', mobileThreshold: componentMobileThreshold, isNullAfterThreshold, extraButton, isExtraButtonRight = true } = props;
    const { state: { width }, mobileThreshold } = useLayout();
    const { state: { slides, totalSlides } } = useManager();
    const { state: { activeSlide }, changeSlide } = useController();
    if (Number(width) <= (componentMobileThreshold !== null && componentMobileThreshold !== void 0 ? componentMobileThreshold : mobileThreshold)) {
        if (isNullAfterThreshold)
            return null;
        return React__default.createElement(Nav, Object.assign({}, props));
    }
    function renderButtons() {
        if (!totalSlides)
            return [];
        const onClickHandler = (slideNumber) => {
            if (slideNumber !== activeSlide)
                changeSlide(slideNumber);
        };
        return Array.from(slides.values()).map(({ label, number }, index) => {
            const description = label;
            return (
            // TODO: Deal with the disabled linting later:
            // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-noninteractive-element-interactions
            React__default.createElement("li", { key: index, className: composeCssClasses('hero-slider-menu-nav-button', MenuNavModuleCss.Button, {
                    className: MenuNavModuleCss.Active,
                    useIf: activeSlide === number
                }), onClick: () => onClickHandler(number) },
                React__default.createElement("div", { className: composeCssClasses('hero-slider-menu-nav-button-description', MenuNavModuleCss.Description) },
                    React__default.createElement("div", { className: composeCssClasses('hero-slider-menu-nav-button-number', MenuNavModuleCss.Number) },
                        number,
                        React__default.createElement("span", { className: composeCssClasses('hero-slider-menu-nav-button-square', MenuNavModuleCss.Square) })),
                    React__default.createElement("div", { className: composeCssClasses('hero-slider-menu-nav-button-text', MenuNavModuleCss.Text) }, description))));
        });
    }
    /**
     * CSS variables for the transitions.
     */
    const CSSVariables = {
        '--nav-color': color,
        '--nav-active-color': activeColor
    };
    return (React__default.createElement("div", { className: composeCssClasses('hero-slider-menu-nav-wrapper', MenuNavModuleCss.Wrapper), style: Object.assign(Object.assign(Object.assign({}, position), CSSVariables), { justifyContent }) },
        extraButton && (React__default.createElement("div", { className: composeCssClasses('hero-slider-menu-nav-extra', MenuNavModuleCss.Extra), style: {
                order: isExtraButtonRight ? 1 : 0
            } },
            React__default.createElement("span", { className: composeCssClasses('hero-slider-menu-nav-extra-button', MenuNavModuleCss.ExtraButton), style: {
                    borderLeft: isExtraButtonRight
                        ? '1px solid var(--nav-color, rgba(215, 225, 235, 0.6))'
                        : undefined,
                    borderRight: !isExtraButtonRight
                        ? '1px solid var(--nav-color, rgba(215, 225, 235, 0.6))'
                        : undefined
                } }, extraButton))),
        React__default.createElement("ul", { className: composeCssClasses('hero-slider-menu-nav-container', MenuNavModuleCss.Container) },
            renderButtons(),
            React__default.createElement("span", { className: composeCssClasses('hero-slider-menu-nav-bar', MenuNavModuleCss.Bar), style: {
                    width: `${100 / totalSlides}%`,
                    transform: `translate3d(${activeSlide - 1}00%, 0, 0)`
                } }))));
}
MenuNav.displayName = 'hero-slider/menu-nav';

export { MenuNav };
//# sourceMappingURL=index.js.map
