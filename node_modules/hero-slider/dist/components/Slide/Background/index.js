import { __rest } from '../../../node_modules/.pnpm/@rollup_plugin-typescript@8.5.0_jm3lfwhp2n3nxb4wwf6zz565he/node_modules/tslib/tslib.es6.js';
import React__default from 'react';
import BackgroundModuleCss from './index.module.css.js';
import { composeCssClasses } from '../../../utils/composeCssClasses.js';

/**
 * Type definition for `BackgroundProps.backgroundAnimation`.
 */
var BackgroundAnimation;
(function (BackgroundAnimation) {
    BackgroundAnimation["FADE"] = "fade";
    BackgroundAnimation["ZOOM"] = "zoom";
})(BackgroundAnimation || (BackgroundAnimation = {}));
function Background(props) {
    const { backgroundAnimation = BackgroundAnimation.FADE, backgroundImageClassName, backgroundImageBlendMode, backgroundImageSizes, backgroundImageSrcSet, backgroundImageSrc, backgroundImageAlt, backgroundImageStyle, 
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    maskBackgroundBlendMode: _, // Not used.
    shouldLazyLoad = true, onLoad } = props, background = __rest(props, ["backgroundAnimation", "backgroundImageClassName", "backgroundImageBlendMode", "backgroundImageSizes", "backgroundImageSrcSet", "backgroundImageSrc", "backgroundImageAlt", "backgroundImageStyle", "maskBackgroundBlendMode", "shouldLazyLoad", "onLoad"]);
    const [isLoaded, setIsLoaded] = React__default.useState(false);
    const onLoadHandler = (event) => {
        if (onLoad)
            onLoad(event);
        setIsLoaded(true);
    };
    /**
     * If there is no `backgroundImageSrc`, then there is no need to:
     * - Add the `Loading` class is not needed, instead the default class is `Loaded`.
     * - `img` tag element will not render.
     */
    const imageBackgroundClassNames = [];
    if (isLoaded) {
        imageBackgroundClassNames.push(BackgroundModuleCss.Loaded);
        switch (backgroundAnimation) {
            case BackgroundAnimation.ZOOM:
                imageBackgroundClassNames.push(BackgroundModuleCss.ZoomOut);
                break;
            case BackgroundAnimation.FADE:
                imageBackgroundClassNames.push(BackgroundModuleCss.FadeIn);
                break;
        }
    }
    else {
        imageBackgroundClassNames.push(BackgroundModuleCss.Loading);
    }
    return (React__default.createElement("div", { className: composeCssClasses('hero-slider-slide-background', backgroundImageClassName, BackgroundModuleCss.Background), style: background },
        React__default.createElement("img", { className: composeCssClasses('hero-slider-slide-background-image', backgroundImageClassName, BackgroundModuleCss.Image, ...imageBackgroundClassNames), sizes: backgroundImageSizes, srcSet: backgroundImageSrcSet, src: backgroundImageSrc, alt: backgroundImageAlt, style: Object.assign({ mixBlendMode: backgroundImageBlendMode }, backgroundImageStyle), onLoad: onLoadHandler, loading: shouldLazyLoad ? 'lazy' : 'eager' })));
}

export { BackgroundAnimation, Background as default };
//# sourceMappingURL=index.js.map
