{"version":3,"file":"index.js","sources":["../../../src/components/SideNav/index.tsx"],"sourcesContent":["import React from 'react';\nimport SideNavModuleCss from './index.module.css';\nimport { NavPosition, NavProps } from '../Nav';\nimport { useController } from '../../modules/Controller';\nimport { useManager } from '../../modules/Manager';\nimport { composeCssClasses } from '../../utils/composeCssClasses';\n\n/**\n * `SideNav` component props.\n */\nexport interface SideNavProps extends NavProps {\n  /**\n   * Defines the inline CSS property `right` of the component.\n   */\n  right?: React.CSSProperties['right'];\n  /**\n   * Defines the inline CSS property `left` of the component.\n   */\n  left?: React.CSSProperties['left'];\n  /**\n   * Defines the position. If you set it to the left, set this to false to disable any existing `right` CSS properties and avoid any conflicts.\n   * @default true\n   */\n  isPositionedRight?: boolean;\n  /**\n   * Object of CSS properties `top`, `left`, `bottom`, and `right` used to absolutely position elements.\n   * Aside from the former, you can also set the CSS `transform` property to help you center the element.\n   * @default\n   * {\n   *    bottom: undefined,\n   *    top: '50%',\n   *    left: !isPositionedRight ? left || '1rem' : undefined,\n   *    right: isPositionedRight ? right || '1rem' : undefined,\n   *    transform: 'translateY(-50%)'\n   * }\n   */\n  position?: NavPosition;\n}\n\nexport function SideNav({\n  color,\n  activeColor,\n  left,\n  right,\n  isPositionedRight = true,\n  position = {\n    bottom: undefined,\n    top: '50%',\n    left: !isPositionedRight ? left || '1rem' : undefined,\n    right: isPositionedRight ? right || '1rem' : undefined,\n    transform: 'translateY(-50%)'\n  }\n}: SideNavProps) {\n  const {\n    state: { slides, totalSlides }\n  } = useManager();\n\n  const {\n    state: { activeSlide },\n    changeSlide\n  } = useController();\n\n  function renderButtons() {\n    if (!totalSlides) return [];\n\n    const onClickHandler = (slideNumber: number) => {\n      if (slideNumber !== activeSlide) changeSlide(slideNumber);\n    };\n\n    return Array.from(slides.values()).map(({ number }) => {\n      return (\n        // TODO: Deal with the disabled linting later:\n        // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions, jsx-a11y/click-events-have-key-events\n        <li\n          key={number}\n          className={composeCssClasses(\n            'hero-slider-side-nav-button',\n            SideNavModuleCss.Button,\n            {\n              className: SideNavModuleCss.Active,\n              useIf: activeSlide === number\n            }\n          )}\n          onClick={() => onClickHandler(number)}\n          style={{\n            justifyContent: isPositionedRight ? 'flex-end' : 'flex-start'\n          }}\n        >\n          <span\n            className={composeCssClasses(\n              'hero-slider-side-nav-button-line',\n              SideNavModuleCss.Line\n            )}\n          />\n          <span\n            className={composeCssClasses(\n              'hero-slider-side-nav-button-number',\n              SideNavModuleCss.Number\n            )}\n          >\n            {number.toLocaleString()}\n          </span>\n        </li>\n      );\n    });\n  }\n\n  /**\n   * CSS variables for the transitions.\n   */\n  const CSSVariables = {\n    '--nav-color': color,\n    '--nav-active-color': activeColor\n  };\n\n  return (\n    <ul\n      className={composeCssClasses(\n        'hero-slider-side-nav-wrapper',\n        SideNavModuleCss.Wrapper\n      )}\n      style={{\n        ...position,\n        ...CSSVariables\n      }}\n    >\n      {renderButtons()}\n    </ul>\n  );\n}\n\n(SideNav as React.FunctionComponent).displayName = 'hero-slider/nav';\n"],"names":["React"],"mappings":";;;;;;SAuCgB,OAAO,CAAC,EACtB,KAAK,EACL,WAAW,EACX,IAAI,EACJ,KAAK,EACL,iBAAiB,GAAG,IAAI,EACxB,QAAQ,GAAG;AACT,IAAA,MAAM,EAAE,SAAS;AACjB,IAAA,GAAG,EAAE,KAAK;AACV,IAAA,IAAI,EAAE,CAAC,iBAAiB,GAAG,IAAI,IAAI,MAAM,GAAG,SAAS;IACrD,KAAK,EAAE,iBAAiB,GAAG,KAAK,IAAI,MAAM,GAAG,SAAS;AACtD,IAAA,SAAS,EAAE,kBAAkB;CAC9B,EACY,EAAA;AACb,IAAA,MAAM,EACJ,KAAK,EAAE,EAAE,MAAM,EAAE,WAAW,EAAE,EAC/B,GAAG,UAAU,EAAE,CAAC;AAEjB,IAAA,MAAM,EACJ,KAAK,EAAE,EAAE,WAAW,EAAE,EACtB,WAAW,EACZ,GAAG,aAAa,EAAE,CAAC;AAEpB,IAAA,SAAS,aAAa,GAAA;AACpB,QAAA,IAAI,CAAC,WAAW;AAAE,YAAA,OAAO,EAAE,CAAC;AAE5B,QAAA,MAAM,cAAc,GAAG,CAAC,WAAmB,KAAI;YAC7C,IAAI,WAAW,KAAK,WAAW;gBAAE,WAAW,CAAC,WAAW,CAAC,CAAC;AAC5D,SAAC,CAAC;AAEF,QAAA,OAAO,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,EAAE,KAAI;YACpD;;;AAGE,YAAAA,cAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EACE,GAAG,EAAE,MAAM,EACX,SAAS,EAAE,iBAAiB,CAC1B,6BAA6B,EAC7B,gBAAgB,CAAC,MAAM,EACvB;oBACE,SAAS,EAAE,gBAAgB,CAAC,MAAM;oBAClC,KAAK,EAAE,WAAW,KAAK,MAAM;AAC9B,iBAAA,CACF,EACD,OAAO,EAAE,MAAM,cAAc,CAAC,MAAM,CAAC,EACrC,KAAK,EAAE;oBACL,cAAc,EAAE,iBAAiB,GAAG,UAAU,GAAG,YAAY;AAC9D,iBAAA,EAAA;gBAEDA,cACE,CAAA,aAAA,CAAA,MAAA,EAAA,EAAA,SAAS,EAAE,iBAAiB,CAC1B,kCAAkC,EAClC,gBAAgB,CAAC,IAAI,CACtB,EACD,CAAA;AACF,gBAAAA,cAAA,CAAA,aAAA,CAAA,MAAA,EAAA,EACE,SAAS,EAAE,iBAAiB,CAC1B,oCAAoC,EACpC,gBAAgB,CAAC,MAAM,CACxB,EAAA,EAEA,MAAM,CAAC,cAAc,EAAE,CACnB,CACJ,EACL;AACJ,SAAC,CAAC,CAAC;KACJ;AAED;;AAEG;AACH,IAAA,MAAM,YAAY,GAAG;AACnB,QAAA,aAAa,EAAE,KAAK;AACpB,QAAA,oBAAoB,EAAE,WAAW;KAClC,CAAC;IAEF,QACEA,qCACE,SAAS,EAAE,iBAAiB,CAC1B,8BAA8B,EAC9B,gBAAgB,CAAC,OAAO,CACzB,EACD,KAAK,EACA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,QAAQ,CACR,EAAA,YAAY,KAGhB,aAAa,EAAE,CACb,EACL;AACJ,CAAC;AAEA,OAAmC,CAAC,WAAW,GAAG,iBAAiB;;;;"}