import React from 'react';
declare type Slide = {
    ref: React.RefObject<HTMLElement>;
    number: number;
    label?: string;
};
export interface ManagerProps {
    /**
     * Determines if on a mobile device. If true, the control buttons at the sides of the slider won't render.
     * @default /Mobi|Android/i.test(navigator.userAgentData || navigator.userAgent)
     */
    isMobile?: boolean;
}
interface GetSlide {
    (ref: Slide['ref']): Slide | undefined;
}
interface RegisterSlide {
    (ref: Slide['ref'], label?: string): void;
}
interface RemoveSlide {
    (ref: Slide['ref']): void;
}
interface State extends Required<ManagerProps> {
    slides: Map<Slide['ref'], Slide>;
    totalSlides: number;
}
declare type ProviderProps = React.PropsWithChildren<{
    manager?: ManagerProps;
}>;
declare function ManagerProvider({ children, manager }: ProviderProps): JSX.Element;
declare function useManager(): {
    state: State;
    getSlide: GetSlide;
    registerSlide: RegisterSlide;
    removeSlide: RemoveSlide;
};
export { ManagerProvider, useManager };
//# sourceMappingURL=Manager.d.ts.map