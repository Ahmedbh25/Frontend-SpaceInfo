{"version":3,"file":"IntersectionObserver.js","sources":["../../src/modules/IntersectionObserver.tsx"],"sourcesContent":["import React from 'react';\nimport { useInView } from 'react-intersection-observer';\n\ntype ProviderProps = React.PropsWithChildren;\n\nconst IntersectionObserverStateContext = React.createContext<\n  | {\n      elementObservedRef: (node?: Element | null | undefined) => void;\n      isInView: boolean;\n    }\n  | undefined\n>(undefined);\n\nfunction IntersectionObserverProvider({ children }: ProviderProps) {\n  const [ref, inView] = useInView({ threshold: 0 });\n\n  // NOTE: you *might* need to memoize this value\n  // Learn more in http://kcd.im/optimize-context\n  const value = {\n    elementObservedRef: ref,\n    isInView: inView\n  };\n\n  return (\n    <IntersectionObserverStateContext.Provider value={value}>\n      {children}\n    </IntersectionObserverStateContext.Provider>\n  );\n}\n\nfunction useIntersectionObserver() {\n  const context = React.useContext(IntersectionObserverStateContext);\n\n  if (context === undefined) {\n    throw new Error(\n      'useIntersectionObserver must be used within a IntersectionObserverProvider'\n    );\n  }\n\n  return context;\n}\n\nexport { IntersectionObserverProvider, useIntersectionObserver };\n"],"names":["React"],"mappings":";;;AAKA,MAAM,gCAAgC,GAAGA,cAAK,CAAC,aAAa,CAM1D,SAAS,CAAC,CAAC;AAEb,SAAS,4BAA4B,CAAC,EAAE,QAAQ,EAAiB,EAAA;AAC/D,IAAA,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,SAAS,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;;;AAIlD,IAAA,MAAM,KAAK,GAAG;AACZ,QAAA,kBAAkB,EAAE,GAAG;AACvB,QAAA,QAAQ,EAAE,MAAM;KACjB,CAAC;AAEF,IAAA,QACEA,cAAA,CAAA,aAAA,CAAC,gCAAgC,CAAC,QAAQ,EAAA,EAAC,KAAK,EAAE,KAAK,EAAA,EACpD,QAAQ,CACiC,EAC5C;AACJ,CAAC;AAED,SAAS,uBAAuB,GAAA;IAC9B,MAAM,OAAO,GAAGA,cAAK,CAAC,UAAU,CAAC,gCAAgC,CAAC,CAAC;IAEnE,IAAI,OAAO,KAAK,SAAS,EAAE;AACzB,QAAA,MAAM,IAAI,KAAK,CACb,4EAA4E,CAC7E,CAAC;AACH,KAAA;AAED,IAAA,OAAO,OAAO,CAAC;AACjB;;;;"}