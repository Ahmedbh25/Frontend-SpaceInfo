{"version":3,"file":"Manager.js","sources":["../../src/modules/Manager.tsx"],"sourcesContent":["import React from 'react';\n\ntype Slide = {\n  ref: React.RefObject<HTMLElement>;\n  number: number;\n  label?: string;\n};\n\nexport interface ManagerProps {\n  /**\n   * Determines if on a mobile device. If true, the control buttons at the sides of the slider won't render.\n   * @default /Mobi|Android/i.test(navigator.userAgentData || navigator.userAgent)\n   */\n  isMobile?: boolean;\n}\n\ninterface GetSlide {\n  (ref: Slide['ref']): Slide | undefined;\n}\n\ninterface RegisterSlide {\n  (ref: Slide['ref'], label?: string): void;\n}\n\ninterface RemoveSlide {\n  (ref: Slide['ref']): void;\n}\n\ntype Action =\n  | {\n      type: 'update-is-mobile';\n      payload: boolean;\n    }\n  | {\n      type: 'register-slide';\n      payload: Pick<Slide, 'ref' | 'label'>;\n    }\n  | {\n      type: 'remove-slide';\n      payload: Slide['ref'];\n    };\ninterface State extends Required<ManagerProps> {\n  slides: Map<Slide['ref'], Slide>;\n  totalSlides: number;\n}\ntype ProviderProps = React.PropsWithChildren<{ manager?: ManagerProps }>;\n\n/**\n * Detecs if on a mobile device.\n */\nfunction isMobile(): boolean {\n  // But first, detect if running on the browser in case of SSR:\n  const isBrowser = typeof window !== 'undefined';\n\n  if (isBrowser) {\n    if (\n      navigator &&\n      /Mobi|Android/i.test(navigator.userAgentData || navigator.userAgent)\n    )\n      return true;\n    else return false;\n  }\n\n  return false;\n}\n\nconst defaultProps: Pick<State, keyof ManagerProps> = {\n  isMobile: isMobile()\n};\n\nconst ManagerStateContext = React.createContext<\n  | {\n      state: State;\n      getSlide: GetSlide;\n      registerSlide: RegisterSlide;\n      removeSlide: RemoveSlide;\n    }\n  | undefined\n>(undefined);\n\nfunction managerReducer(state: State, action: Action): State {\n  switch (action.type) {\n    case 'update-is-mobile': {\n      return { ...state, isMobile: state.isMobile };\n    }\n    case 'register-slide': {\n      const { slides } = state;\n      slides.set(action.payload.ref, {\n        ref: action.payload.ref,\n        number: slides.size + 1,\n        label: action.payload.label\n      });\n      return { isMobile: state.isMobile, slides, totalSlides: slides.size };\n    }\n    case 'remove-slide': {\n      const { slides } = state;\n      slides.delete(action.payload);\n      return { isMobile: state.isMobile, slides, totalSlides: slides.size };\n    }\n    default: {\n      throw new Error(`Unhandled action: [${JSON.stringify(action, null, 2)}]`);\n    }\n  }\n}\n\nfunction ManagerProvider({ children, manager }: ProviderProps) {\n  const [state, dispatch] = React.useReducer(managerReducer, {\n    isMobile: manager?.isMobile ?? defaultProps.isMobile,\n    slides: new Map(),\n    totalSlides: 0\n  } as State);\n\n  /**\n   * Finds a Slide by its React `ref`.\n   */\n  const getSlide: GetSlide = (ref) => {\n    return state.slides.get(ref);\n  };\n\n  /**\n   * Registers a rendered Slide.\n   */\n  const registerSlide: RegisterSlide = (ref, label) => {\n    dispatch({\n      type: 'register-slide',\n      payload: {\n        ref,\n        label\n      }\n    });\n  };\n\n  /**\n   * Removes a Slide.\n   */\n  const removeSlide: RemoveSlide = (ref) => {\n    dispatch({\n      type: 'remove-slide',\n      payload: ref\n    });\n  };\n\n  /**\n   * If `manager.isMobile` prop changes, update the current state.\n   */\n  React.useEffect(() => {\n    if (typeof manager?.isMobile === 'boolean')\n      dispatch({\n        type: 'update-is-mobile',\n        payload: manager?.isMobile\n      });\n  }, [manager?.isMobile]);\n\n  // NOTE: you *might* need to memoize this value\n  // Learn more in http://kcd.im/optimize-context\n  const value = { state, getSlide, registerSlide, removeSlide };\n\n  return (\n    <ManagerStateContext.Provider value={value}>\n      {children}\n    </ManagerStateContext.Provider>\n  );\n}\n\nfunction useManager() {\n  const context = React.useContext(ManagerStateContext);\n\n  if (context === undefined) {\n    throw new Error('useManager must be used within a ManagerProvider');\n  }\n\n  return context;\n}\n\nexport { ManagerProvider, useManager };\n"],"names":["React"],"mappings":"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"}