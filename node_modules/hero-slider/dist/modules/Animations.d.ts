import React from 'react';
export interface AnimationsProps {
    /**
     * The sliding animations during transitions.
     * @default 'wipe'
     */
    slidingAnimation?: 'fade' | 'wipe';
    /**
     * Fade in duration of the slider during mount, in milliseconds.
     * @default 100
     */
    sliderFadeInDuration?: number;
    /**
     * Navbars fade in duration, in milliseconds.
     * @default 1000
     */
    navbarFadeInDuration?: number;
    /**
     * Navbars fade in delay, in milliseconds.
     * @default 500
     */
    navbarFadeInDelay?: number;
    /**
     * When `true`, the `hero-slider` will know which animation should be set next.
     * For example, if the user is selecting the next slide, the animation would be different to the one if the user had selected the previous slide.
     * The animations will essentially be the same, but moving to different directions (e.g. left or right, or right to left).
     * @default true
     */
    shouldManageAnimationSequence?: boolean;
}
declare type ProviderProps = React.PropsWithChildren<{
    animations?: AnimationsProps;
}>;
interface GetSlidingAnimationCssClass {
    (activeSlide: number, prevActiveSlide: number, slidingDirection?: 'forward' | 'backward'): string;
}
declare function AnimationsProvider({ children, animations }: ProviderProps): JSX.Element;
declare function useAnimations(): {
    sliderFadeInDuration: number;
    navbarFadeInDuration: number;
    navbarFadeInDelay: number;
    getSlidingAnimationCssClass: GetSlidingAnimationCssClass;
};
export { AnimationsProvider, useAnimations };
//# sourceMappingURL=Animations.d.ts.map