{"version":3,"file":"Accessability.js","sources":["../../src/modules/Accessability.tsx"],"sourcesContent":["import React from 'react';\nimport { useController } from './Controller';\n\n/**\n * `AccessabilityOrientation` definition used for the `SliderProps.orientation` prop.\n * Used to define which swipes (depending on directions) will change the slides,\n * and where and how will the buttons render, if set to render.\n */\nexport enum AccessabilityOrientation {\n  VERTICAL = 'vertical',\n  HORIZONTAL = 'horizontal'\n}\n\nexport interface AccessabilityProps {\n  /**\n   * Controls render of the next and previous buttons.\n   * @default true\n   */\n  shouldDisplayButtons?: boolean;\n  /**\n   * When an arrow key is pressed, the active slide will change respectively to the pressed arrow.\n   * The left and down arrows will set the previous slide, and the right and up arrows will set the next slide.\n   * The left and right will only work if the slider is horizontal, and the up and down arrows will only work if the slider is vertical.\n   * @default true\n   */\n  shouldSlideOnArrowKeypress?: boolean;\n  /**\n   * The slider orientation can either set to be `horizontal` or `vertical`.\n   * The orientation sets the slide buttons respective to the orientation (e.g. if vertical, the buttons will be at the top and at the bottom).\n   * Swipe (touch) gestures in mobile devices to change slides will also be configured automatically depending on the orientation (e.g. if horizontal, swiping vertically won't change slides).\n   * @default 'horizontal'\n   */\n  orientation?: `${AccessabilityOrientation}`;\n  /**\n   * Pixel threshold for the Slider to register a swiping command to change slides.\n   * @default 50\n   */\n  thresholdToSlide?: number;\n}\n\ntype Action =\n  | {\n      type: 'start-motion';\n      payload: { x: number; y: number };\n    }\n  | {\n      type: 'update-motion';\n      payload: { x: number; y: number };\n    }\n  | { type: 'end-motion' };\ntype State = {\n  initialX: number | undefined;\n  initialY: number | undefined;\n  currentX: number | undefined;\n  currentY: number | undefined;\n};\ntype ProviderProps = React.PropsWithChildren<{\n  accessability?: AccessabilityProps;\n}>;\n\nconst defaultProps: Required<AccessabilityProps> = {\n  shouldDisplayButtons: true,\n  shouldSlideOnArrowKeypress: true,\n  orientation: AccessabilityOrientation.HORIZONTAL,\n  thresholdToSlide: 50\n};\n\nconst AccessabilityStateContext = React.createContext<\n  | {\n      state: State;\n      shouldDisplayButtons: boolean;\n      orientation: AccessabilityOrientation;\n      onTouchStartHandler: (event: React.TouchEvent<HTMLDivElement>) => void;\n      onTouchMoveHandler: (event: React.TouchEvent<HTMLDivElement>) => void;\n      onTouchEndHandler: () => void;\n    }\n  | undefined\n>(undefined);\n\nfunction accessabilityReducer(state: State, action: Action): State {\n  switch (action.type) {\n    case 'start-motion': {\n      return {\n        initialX: action.payload.x,\n        initialY: action.payload.y,\n        currentX: undefined,\n        currentY: undefined\n      };\n    }\n    case 'update-motion': {\n      return {\n        initialX: state.initialX,\n        initialY: state.initialY,\n        currentX: action.payload.x,\n        currentY: action.payload.y\n      };\n    }\n    case 'end-motion': {\n      return {\n        initialX: undefined,\n        initialY: undefined,\n        currentX: undefined,\n        currentY: undefined\n      };\n    }\n    default: {\n      throw new Error(`Unhandled action: [${JSON.stringify(action, null, 2)}]`);\n    }\n  }\n}\n\nfunction AccessabilityProvider({ children, accessability }: ProviderProps) {\n  const params: Required<AccessabilityProps> = {\n    shouldDisplayButtons:\n      accessability?.shouldDisplayButtons ?? defaultProps.shouldDisplayButtons,\n    shouldSlideOnArrowKeypress:\n      accessability?.shouldSlideOnArrowKeypress ??\n      defaultProps.shouldSlideOnArrowKeypress,\n    orientation: accessability?.orientation || defaultProps.orientation,\n    thresholdToSlide:\n      accessability?.thresholdToSlide ?? defaultProps.thresholdToSlide\n  };\n\n  const [state, dispatch] = React.useReducer(accessabilityReducer, {\n    initialX: undefined,\n    initialY: undefined,\n    currentX: undefined,\n    currentY: undefined\n  } as State);\n\n  const { goToNextSlide, goToPreviousSlide } = useController();\n\n  /**\n   * Sets the initial coordinates of the touch event.\n   */\n  const onTouchStartHandler = (event: React.TouchEvent<HTMLDivElement>) => {\n    dispatch({\n      type: 'start-motion',\n      payload: {\n        x: event.touches[0].clientX,\n        y: event.touches[0].clientY\n      }\n    });\n  };\n\n  /**\n   * Sets the current coordinates of the touch event to the state.\n   */\n  const onTouchMoveHandler = (event: React.TouchEvent<HTMLDivElement>) => {\n    dispatch({\n      type: 'update-motion',\n      payload: {\n        x: event.touches[0].clientX,\n        y: event.touches[0].clientY\n      }\n    });\n  };\n\n  /**\n   * Determines in which direction **and** sense (vector) the user is swiping.\n   * Animations are then set accordingly depending on which direction the user is dragging and the slide is changed.\n   * Finally the touch state is set back to the initial state, where everything is undefined.\n   */\n  const onTouchEndHandler = () => {\n    const diffX = Number(state.initialX) - Number(state.currentX);\n    const diffY = Number(state.initialY) - Number(state.currentY);\n\n    const isSlidingHorizontally: boolean = Math.abs(diffX) > Math.abs(diffY);\n    const isSliderSetHorizontally: boolean =\n      params.orientation === AccessabilityOrientation.HORIZONTAL;\n    const isSliderVertically: boolean =\n      params.orientation === AccessabilityOrientation.VERTICAL;\n\n    if (\n      isSlidingHorizontally &&\n      isSliderSetHorizontally &&\n      Math.abs(diffX) >= params.thresholdToSlide\n    ) {\n      const isSwipingRight = diffX > 0;\n      if (isSwipingRight) goToNextSlide();\n      else goToPreviousSlide();\n    } else if (\n      isSliderVertically &&\n      Math.abs(diffY) >= params.thresholdToSlide\n    ) {\n      const isSwipingUp = diffY > 0;\n      if (isSwipingUp) goToNextSlide();\n      else goToPreviousSlide();\n    }\n\n    dispatch({ type: 'end-motion' });\n  };\n\n  const onArrowKeypressHandler = (e: KeyboardEvent): void => {\n    if (!params.shouldSlideOnArrowKeypress) return;\n\n    const isHorizontal =\n      params.orientation === AccessabilityOrientation.HORIZONTAL;\n\n    switch (true) {\n      // Left keypress.\n      case isHorizontal && e.keyCode === 37:\n        goToPreviousSlide();\n        break;\n      // Right keypress.\n      case isHorizontal && e.keyCode === 39:\n        goToNextSlide();\n        break;\n      // Up keypress.\n      case !isHorizontal && e.keyCode === 38:\n        goToPreviousSlide();\n        break;\n      // Down keypress.\n      case !isHorizontal && e.keyCode === 40:\n        goToNextSlide();\n        break;\n      default: // Do nothing.\n    }\n  };\n\n  /**\n   * After mounting, similar to `componentDidMount`, setup the window event listeners for keydowns. The event handlers will be changing the slides if enabled to do so.\n   */\n  React.useEffect(() => {\n    window.addEventListener('keydown', onArrowKeypressHandler);\n    /**\n     * Clearing any existing timeouts to avoid memory leaks, and clear event listener.\n     */\n    return () => {\n      window.removeEventListener('keydown', onArrowKeypressHandler);\n    };\n  }, [onArrowKeypressHandler]);\n\n  // NOTE: you *might* need to memoize this value\n  // Learn more in http://kcd.im/optimize-context\n  const value = {\n    state,\n    shouldDisplayButtons: params.shouldDisplayButtons,\n    orientation: params.orientation as AccessabilityOrientation,\n    onTouchStartHandler,\n    onTouchMoveHandler,\n    onTouchEndHandler\n  };\n\n  return (\n    <AccessabilityStateContext.Provider value={value}>\n      {children}\n    </AccessabilityStateContext.Provider>\n  );\n}\n\nfunction useAccessability() {\n  const context = React.useContext(AccessabilityStateContext);\n\n  if (context === undefined) {\n    throw new Error(\n      'useAccessability must be used within a AccessabilityProvider'\n    );\n  }\n\n  return context;\n}\n\nexport { AccessabilityProvider, useAccessability };\n"],"names":["React"],"mappings":"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"}