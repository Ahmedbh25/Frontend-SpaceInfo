import React__default from 'react';
import { useInView } from '../node_modules/.pnpm/react-intersection-observer@9.4.0_react@18.2.0/node_modules/react-intersection-observer/react-intersection-observer.modern.mjs.js';

const IntersectionObserverStateContext = React__default.createContext(undefined);
function IntersectionObserverProvider({ children }) {
    const [ref, inView] = useInView({ threshold: 0 });
    // NOTE: you *might* need to memoize this value
    // Learn more in http://kcd.im/optimize-context
    const value = {
        elementObservedRef: ref,
        isInView: inView
    };
    return (React__default.createElement(IntersectionObserverStateContext.Provider, { value: value }, children));
}
function useIntersectionObserver() {
    const context = React__default.useContext(IntersectionObserverStateContext);
    if (context === undefined) {
        throw new Error('useIntersectionObserver must be used within a IntersectionObserverProvider');
    }
    return context;
}

export { IntersectionObserverProvider, useIntersectionObserver };
//# sourceMappingURL=IntersectionObserver.js.map
