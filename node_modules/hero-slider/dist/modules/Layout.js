import React__default from 'react';

const mobileThreshold = 1024;
const LayoutStateContext = React__default.createContext(undefined);
function layoutReducer(state, action) {
    var _a, _b;
    switch (action.type) {
        case 'update-slider-dimensions': {
            return {
                slider: state.slider,
                width: (_a = state.slider.current) === null || _a === void 0 ? void 0 : _a.clientWidth,
                height: (_b = state.slider.current) === null || _b === void 0 ? void 0 : _b.clientHeight
            };
        }
        default: {
            throw new Error(`Unhandled action: [${JSON.stringify(action, null, 2)}]`);
        }
    }
}
function LayoutProvider({ children }) {
    const [state, dispatch] = React__default.useReducer(layoutReducer, {
        slider: React__default.useRef(null),
        width: undefined,
        height: undefined
    });
    /**
     * After mounting, similar to `componentDidMount`, set up the window event listeners and update dimensions.
     */
    React__default.useEffect(() => {
        function updateSliderDimensions() {
            if (state.slider.current)
                dispatch({ type: 'update-slider-dimensions' });
        }
        updateSliderDimensions();
        window.addEventListener('resize', updateSliderDimensions);
        /**
         * Clearing event listener to avoid memory leaks.
         */
        return () => {
            window.removeEventListener('resize', updateSliderDimensions);
        };
    }, [state.slider.current]);
    // NOTE: you *might* need to memoize this value
    // Learn more in http://kcd.im/optimize-context
    const value = { state, mobileThreshold };
    return (React__default.createElement(LayoutStateContext.Provider, { value: value }, children));
}
function useLayout() {
    const context = React__default.useContext(LayoutStateContext);
    if (context === undefined) {
        throw new Error('useLayout must be used within a LayoutProvider');
    }
    return context;
}

export { LayoutProvider, useLayout };
//# sourceMappingURL=Layout.js.map
