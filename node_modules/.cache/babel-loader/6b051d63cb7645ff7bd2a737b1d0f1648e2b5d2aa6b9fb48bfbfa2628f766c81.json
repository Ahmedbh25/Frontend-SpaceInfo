{"ast":null,"code":"import { ACTIONS } from \"./FilterSidebarContext\";\nexport const FilterReducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.PRICE_ASC:\n      const orderAscending = state.products.sort((p, c) => p.price - c.price);\n      return {\n        ...state,\n        products: orderAscending\n      };\n    case ACTIONS.PRICE_DESC:\n      const orderDescending = state.products.sort((p, c) => c.price - p.price);\n      return {\n        ...state,\n        products: orderDescending\n      };\n    case ACTIONS.IN_STOCK:\n      const inStockOnly = state.products.filter(comp => comp.inStock === true);\n      return {\n        ...state,\n        products: inStockOnly\n      };\n    case ACTIONS.TOGGLE_CATEGORY:\n      const updatedCateg = {\n        ...state.toggle,\n        [action.payload]: !state.toggle[action.payload]\n      };\n      const productsliststorage = localStorage.getItem('initialComputers');\n      const Computerscovs = JSON.parse(productsliststorage);\n      const updatedProducts = Computerscovs.filter(prod => prod.categorie.toLowerCase() === action.payload.toLowerCase());\n      Object.keys(updatedCateg).forEach(key => {\n        if (key !== action.payload && updatedCateg[key] === true) {\n          updatedCateg[key] = false;\n        }\n      });\n      return {\n        ...state,\n        toggle: updatedCateg,\n        products: updatedProducts\n      };\n    case ACTIONS.TOGGLE_TYPE:\n      const updatedTypes = {\n        ...state.toggle,\n        [action.payload]: !state.toggle[action.payload]\n      };\n      const productsliststor = localStorage.getItem('initialComputers');\n      const Computerscovss = JSON.parse(productsliststor);\n      const updatedPro = Computerscovss.filter(prod => prod.type.toLowerCase() === action.payload.toLowerCase());\n      Object.keys(updatedTypes).forEach(key => {\n        if (key !== action.payload && updatedTypes[key] === true) {\n          updatedTypes[key] = false;\n        }\n      });\n      return {\n        ...state,\n        toggle: updatedTypes,\n        products: updatedPro\n      };\n    case ACTIONS.DELETE_FILTER:\n      const productsFromLocalStorage = localStorage.getItem('initialComputers');\n      const productscov = JSON.parse(productsFromLocalStorage);\n      return {\n        ...state,\n        products: productscov\n      };\n    default:\n      return state;\n  }\n};\n_c = FilterReducer;\nvar _c;\n$RefreshReg$(_c, \"FilterReducer\");","map":{"version":3,"names":["ACTIONS","FilterReducer","state","action","type","PRICE_ASC","orderAscending","products","sort","p","c","price","PRICE_DESC","orderDescending","IN_STOCK","inStockOnly","filter","comp","inStock","TOGGLE_CATEGORY","updatedCateg","toggle","payload","productsliststorage","localStorage","getItem","Computerscovs","JSON","parse","updatedProducts","prod","categorie","toLowerCase","Object","keys","forEach","key","TOGGLE_TYPE","updatedTypes","productsliststor","Computerscovss","updatedPro","DELETE_FILTER","productsFromLocalStorage","productscov"],"sources":["/home/hana/Desktop/Projects/level1/space-infoPC/client/src/context/Reducers.js"],"sourcesContent":["import { ACTIONS } from \"./FilterSidebarContext\";\n\n\n\nexport const FilterReducer = (state, action) => {\n\n  switch (action.type) {\n\n\n\n    case ACTIONS.PRICE_ASC:\n      const orderAscending = state.products.sort((p, c) => p.price - c.price);\n      return { ...state, products: orderAscending }\n\n    case ACTIONS.PRICE_DESC:\n      const orderDescending = state.products.sort((p, c) => c.price - p.price);\n      return { ...state, products: orderDescending }\n\n    case ACTIONS.IN_STOCK:\n      const inStockOnly = state.products.filter(comp => comp.inStock === true)\n      return { ...state, products: inStockOnly }\n\n    case ACTIONS.TOGGLE_CATEGORY:\n      const updatedCateg = { ...state.toggle, [action.payload] : !state.toggle[action.payload] };\n      const productsliststorage = localStorage.getItem('initialComputers');\n      const Computerscovs = JSON.parse(productsliststorage);\n      const updatedProducts = Computerscovs.filter(prod => prod.categorie.toLowerCase() === action.payload.toLowerCase());\n      \n      Object.keys(updatedCateg).forEach(key => {\n        if (key !== action.payload && updatedCateg[key] === true) {\n          updatedCateg[key] = false;\n        }\n      });\n      return {\n        ...state,\n        toggle: updatedCateg,\n        products: updatedProducts,\n      };\n\n    case ACTIONS.TOGGLE_TYPE:\n      const updatedTypes = { ...state.toggle, [action.payload]: !state.toggle[action.payload] }\n      const productsliststor = localStorage.getItem('initialComputers');\n      const Computerscovss = JSON.parse(productsliststor);\n      const updatedPro = Computerscovss.filter(prod => prod.type.toLowerCase() === action.payload.toLowerCase());\n\n      Object.keys(updatedTypes).forEach(key => {\n        if (key !== action.payload && updatedTypes[key] === true) {\n          updatedTypes[key] = false;\n        }\n      });\n\n      return {\n        ...state,\n        toggle: updatedTypes,\n        products: updatedPro,\n      };\n\n      case ACTIONS.DELETE_FILTER:\n        const productsFromLocalStorage = localStorage.getItem('initialComputers');\n        const productscov = JSON.parse(productsFromLocalStorage);\n        return { ...state, products: productscov }\n\n    default:\n      return state;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}