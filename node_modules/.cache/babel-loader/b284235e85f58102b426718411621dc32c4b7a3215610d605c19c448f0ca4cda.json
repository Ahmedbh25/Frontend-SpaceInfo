{"ast":null,"code":"var _jsxFileName = \"/home/hana/Desktop/Projects/level1/space-infoPC/client/src/context/FilterSidebarContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useReducer, createContext, useContext } from 'react';\nimport { FilterNavReducer, UpdateCheckboxsReducer } from './Reducers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilterSideContext = /*#__PURE__*/createContext();\nexport const ACTIONS_NAV = {\n  TYPE: {\n    ASUS: \"asus\",\n    LENOVO: \"lenovo\",\n    MACOS: \"macos\",\n    DELL: \"dell\"\n  },\n  CATEGORIE: {\n    LAPTOP: \"laptop\",\n    DESKTOP: \"desktop\",\n    PHONE: \"phone\"\n  }\n};\nconst initState = {\n  computers: [],\n  filtredComputers: []\n};\nconst initialState = {\n  categories: {\n    laptop: true,\n    desktop: false\n  },\n  types: {\n    asus: false,\n    lenovo: false,\n    mac: false,\n    dell: false\n  }\n};\nexport default function FilterSidebarContext(_ref) {\n  _s();\n  let {\n    Children\n  } = _ref;\n  const [statenav, dispatchFilternav] = useReducer(FilterNavReducer, initState);\n  const [checkboxstate, dispatchCheckbox] = useReducer(UpdateCheckboxsReducer, initialState);\n  function handleCategoryToggle(category) {\n    dispatchCheckbox({\n      type: 'TOGGLE_CATEGORY',\n      payload: category\n    });\n  }\n  function handleTypeToggle(type) {\n    dispatchCheckbox({\n      type: 'TOGGLE_TYPE',\n      payload: type,\n      checkboxstate,\n      handleCategoryToggle\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(FilterSideContext.Provider, {\n    value: {\n      statenav,\n      dispatchFilternav\n    },\n    children: Children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(FilterSidebarContext, \"PEQMY9Inv/v3WKo1bQDp9ykYBp0=\");\n_c = FilterSidebarContext;\nexport const FilterSidebarState = () => {\n  _s2();\n  return useContext(FilterSideContext);\n};\n_s2(FilterSidebarState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n_c2 = FilterSidebarState;\nvar _c, _c2;\n$RefreshReg$(_c, \"FilterSidebarContext\");\n$RefreshReg$(_c2, \"FilterSidebarState\");","map":{"version":3,"names":["React","useReducer","createContext","useContext","FilterNavReducer","UpdateCheckboxsReducer","FilterSideContext","ACTIONS_NAV","TYPE","ASUS","LENOVO","MACOS","DELL","CATEGORIE","LAPTOP","DESKTOP","PHONE","initState","computers","filtredComputers","initialState","categories","laptop","desktop","types","asus","lenovo","mac","dell","FilterSidebarContext","Children","statenav","dispatchFilternav","checkboxstate","dispatchCheckbox","handleCategoryToggle","category","type","payload","handleTypeToggle","FilterSidebarState"],"sources":["/home/hana/Desktop/Projects/level1/space-infoPC/client/src/context/FilterSidebarContext.js"],"sourcesContent":["import React, { useReducer, createContext, useContext } from 'react'\nimport { FilterNavReducer, UpdateCheckboxsReducer } from './Reducers';\nconst FilterSideContext = createContext();\n\nexport const ACTIONS_NAV = {\n\n  TYPE : {\n    ASUS : \"asus\",\n    LENOVO : \"lenovo\",\n    MACOS : \"macos\",\n    DELL : \"dell\"\n  },\n\n  CATEGORIE : {\n    LAPTOP : \"laptop\",\n    DESKTOP : \"desktop\",\n    PHONE : \"phone\"\n  },\n\n}\n\nconst initState = {\n  computers : [],\n  filtredComputers : [],\n}\n\nconst initialState = {\n  categories: {\n    laptop: true,\n    desktop: false,\n  },\n\n  types: {\n    asus: false,\n    lenovo: false,\n    mac: false,\n    dell: false,\n  },\n};\n\nexport default function FilterSidebarContext({Children}) {\n\n  const [statenav, dispatchFilternav] = useReducer(FilterNavReducer , initState);\n\n  const [checkboxstate, dispatchCheckbox] = useReducer(UpdateCheckboxsReducer ,initialState);\n\n  function handleCategoryToggle(category) {\n    dispatchCheckbox({ type: 'TOGGLE_CATEGORY', payload: category });\n  }\n\n  function handleTypeToggle(type) {\n    dispatchCheckbox({ type: 'TOGGLE_TYPE', payload: type,checkboxstate, handleCategoryToggle });\n  }\n\n\n  return (\n    <FilterSideContext.Provider value={{statenav, dispatchFilternav}}>\n        {Children}\n    </FilterSideContext.Provider>\n  )\n}\n\nexport const  FilterSidebarState = ()=>{\n    return useContext(FilterSideContext);\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACpE,SAASC,gBAAgB,EAAEC,sBAAsB,QAAQ,YAAY;AAAC;AACtE,MAAMC,iBAAiB,gBAAGJ,aAAa,EAAE;AAEzC,OAAO,MAAMK,WAAW,GAAG;EAEzBC,IAAI,EAAG;IACLC,IAAI,EAAG,MAAM;IACbC,MAAM,EAAG,QAAQ;IACjBC,KAAK,EAAG,OAAO;IACfC,IAAI,EAAG;EACT,CAAC;EAEDC,SAAS,EAAG;IACVC,MAAM,EAAG,QAAQ;IACjBC,OAAO,EAAG,SAAS;IACnBC,KAAK,EAAG;EACV;AAEF,CAAC;AAED,MAAMC,SAAS,GAAG;EAChBC,SAAS,EAAG,EAAE;EACdC,gBAAgB,EAAG;AACrB,CAAC;AAED,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE;IACVC,MAAM,EAAE,IAAI;IACZC,OAAO,EAAE;EACX,CAAC;EAEDC,KAAK,EAAE;IACLC,IAAI,EAAE,KAAK;IACXC,MAAM,EAAE,KAAK;IACbC,GAAG,EAAE,KAAK;IACVC,IAAI,EAAE;EACR;AACF,CAAC;AAED,eAAe,SAASC,oBAAoB,OAAa;EAAA;EAAA,IAAZ;IAACC;EAAQ,CAAC;EAErD,MAAM,CAACC,QAAQ,EAAEC,iBAAiB,CAAC,GAAG/B,UAAU,CAACG,gBAAgB,EAAGa,SAAS,CAAC;EAE9E,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjC,UAAU,CAACI,sBAAsB,EAAEe,YAAY,CAAC;EAE1F,SAASe,oBAAoB,CAACC,QAAQ,EAAE;IACtCF,gBAAgB,CAAC;MAAEG,IAAI,EAAE,iBAAiB;MAAEC,OAAO,EAAEF;IAAS,CAAC,CAAC;EAClE;EAEA,SAASG,gBAAgB,CAACF,IAAI,EAAE;IAC9BH,gBAAgB,CAAC;MAAEG,IAAI,EAAE,aAAa;MAAEC,OAAO,EAAED,IAAI;MAACJ,aAAa;MAAEE;IAAqB,CAAC,CAAC;EAC9F;EAGA,oBACE,QAAC,iBAAiB,CAAC,QAAQ;IAAC,KAAK,EAAE;MAACJ,QAAQ;MAAEC;IAAiB,CAAE;IAAA,UAC5DF;EAAQ;IAAA;IAAA;IAAA;EAAA,QACgB;AAEjC;AAAC,GApBuBD,oBAAoB;AAAA,KAApBA,oBAAoB;AAsB5C,OAAO,MAAOW,kBAAkB,GAAG,MAAI;EAAA;EACnC,OAAOrC,UAAU,CAACG,iBAAiB,CAAC;AACxC,CAAC;AAAA,IAFakC,kBAAkB;AAAA,MAAlBA,kBAAkB;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}