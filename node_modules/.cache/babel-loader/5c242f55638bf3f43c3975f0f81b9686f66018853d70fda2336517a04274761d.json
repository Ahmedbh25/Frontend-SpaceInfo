{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nconst useFetch = (url, dispatch, state) => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const FetchApiData = async () => {\n      setLoading(true);\n      try {\n        const res = await axios.get(url);\n        setData(res.data);\n        if (dispatch) {\n          state.products = res.data;\n          state.constantProducts = res.data;\n          const Computers = JSON.stringify(res.data);\n          localStorage.setItem('initialComputers', Computers);\n          dispatch({\n            type: \"SET_COMPUTERS\",\n            payload: res.data\n          });\n        }\n      } catch (error) {\n        setError(error);\n      }\n      setLoading(false);\n    };\n    FetchApiData();\n  }, [url]);\n  return {\n    data,\n    loading,\n    error\n  };\n};\n\n/*\nexport const FetchContacts = ()=>{\n    const [contacts, setContacts] = useState();\n    const [loading, setLoading] = useState();\n    const [error, setError] = useState();\n\n    useEffect(()=>{\n\n    },[]);\n\n}\n*/\n_s(useFetch, \"Oicl48iGuYykLyvnN5ILs6bqZ0Y=\");\nexport default useFetch;","map":{"version":3,"names":["React","useState","useEffect","axios","useFetch","url","dispatch","state","data","setData","loading","setLoading","error","setError","FetchApiData","res","get","products","constantProducts","Computers","JSON","stringify","localStorage","setItem","type","payload"],"sources":["/home/hana/Desktop/Projects/level1/space-infoPC/client/src/hooks/useFetch.js"],"sourcesContent":["import React, {useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst useFetch = (url, dispatch, state) => {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    useEffect(()=>{\n        const FetchApiData = async()=>{\n        setLoading(true);\n        try{\n            const res = await axios.get(url);\n            setData(res.data);\n            if(dispatch){\n                state.products = res.data;\n                state.constantProducts = res.data;\n                const Computers = JSON.stringify(res.data);\n                localStorage.setItem('initialComputers', Computers);\n                dispatch({ type: \"SET_COMPUTERS\", payload: res.data });\n            }\n        }catch(error){\n            setError(error);\n        }\n        setLoading(false);\n    };\n    FetchApiData();\n\n    }, [url])\n    return { data, loading, error };\n}\n\n/*\nexport const FetchContacts = ()=>{\n    const [contacts, setContacts] = useState();\n    const [loading, setLoading] = useState();\n    const [error, setError] = useState();\n\n    useEffect(()=>{\n\n    },[]);\n\n}\n*/\nexport default useFetch;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjD,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,CAACC,GAAG,EAAEC,QAAQ,EAAEC,KAAK,KAAK;EAAA;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEzCC,SAAS,CAAC,MAAI;IACV,MAAMY,YAAY,GAAG,YAAS;MAC9BH,UAAU,CAAC,IAAI,CAAC;MAChB,IAAG;QACC,MAAMI,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAACX,GAAG,CAAC;QAChCI,OAAO,CAACM,GAAG,CAACP,IAAI,CAAC;QACjB,IAAGF,QAAQ,EAAC;UACRC,KAAK,CAACU,QAAQ,GAAGF,GAAG,CAACP,IAAI;UACzBD,KAAK,CAACW,gBAAgB,GAAGH,GAAG,CAACP,IAAI;UACjC,MAAMW,SAAS,GAAGC,IAAI,CAACC,SAAS,CAACN,GAAG,CAACP,IAAI,CAAC;UAC1Cc,YAAY,CAACC,OAAO,CAAC,kBAAkB,EAAEJ,SAAS,CAAC;UACnDb,QAAQ,CAAC;YAAEkB,IAAI,EAAE,eAAe;YAAEC,OAAO,EAAEV,GAAG,CAACP;UAAK,CAAC,CAAC;QAC1D;MACJ,CAAC,QAAMI,KAAK,EAAC;QACTC,QAAQ,CAACD,KAAK,CAAC;MACnB;MACAD,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC;IACDG,YAAY,EAAE;EAEd,CAAC,EAAE,CAACT,GAAG,CAAC,CAAC;EACT,OAAO;IAAEG,IAAI;IAAEE,OAAO;IAAEE;EAAM,CAAC;AACnC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA,GA7BMR,QAAQ;AAyCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}