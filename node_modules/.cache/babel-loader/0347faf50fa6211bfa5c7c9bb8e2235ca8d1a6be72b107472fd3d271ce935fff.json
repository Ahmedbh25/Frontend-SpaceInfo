{"ast":null,"code":"var _jsxFileName = \"/home/hana/Desktop/Projects/level1/space-infoPC/client/src/pages/contact/addContact/addContact.js\";\nimport React, { useState } from 'react';\nimport { Box, TextField, Container, Typography, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ADDContact(opinionRef, setContact, loading, errorDescription) {\n  const handleADDContact = async event => {\n    event.preventDefault();\n    const message = opinionRef.current.value;\n    console.log(opinionRef.current.value);\n    if (message.length < 8) {\n      return errorDescription.current.innerHTML = \"Your Contact Message Must Contain at least 8 Caracters.\";\n    } else {\n      errorDescription.current.innerHTML = \"\";\n    }\n    try {\n      setLoading(true);\n      const savedContact = await axios.post(`/contacts/${userID}`, {\n        contact_message: contact\n      });\n      setLoading(false);\n      setData([...data, savedContact.data]);\n      successMessage.current.textContent = 'Your Contact added Successfully';\n      opinionRef.current.value = \"\";\n      setTimeout(() => {\n        successMessage.current.textContent = \"\";\n      }, 2000);\n    } catch (error) {\n      console.log(error.response.data.message);\n      setError(error.response.data.message);\n      alert(\"Somthing Went Wrong !!!!!\");\n      return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleADDContact,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          m: 1\n        },\n        children: \"Contact us :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Contact us\",\n        multiline: true,\n        rows: 5,\n        onChange: e => setContact(e.target.value),\n        inputRef: opinionRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        varaint: \"caption\",\n        ref: errorDescription,\n        sx: {\n          color: \"red\",\n          m: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        sx: {\n          m: 2\n        },\n        disabled: loading,\n        children: \"add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_c = ADDContact;\nexport default ADDContact;\nvar _c;\n$RefreshReg$(_c, \"ADDContact\");","map":{"version":3,"names":["React","useState","Box","TextField","Container","Typography","Button","ADDContact","opinionRef","setContact","loading","errorDescription","handleADDContact","event","preventDefault","message","current","value","console","log","length","innerHTML","setLoading","savedContact","axios","post","userID","contact_message","contact","setData","data","successMessage","textContent","setTimeout","error","response","setError","alert","m","e","target","color"],"sources":["/home/hana/Desktop/Projects/level1/space-infoPC/client/src/pages/contact/addContact/addContact.js"],"sourcesContent":["import React, {useState} from 'react'\nimport { Box, TextField, Container, Typography, Button } from '@mui/material'\n\nfunction ADDContact(opinionRef, setContact, loading, errorDescription) {\n\n    const handleADDContact = async (event) => {\n        event.preventDefault();\n        const message = opinionRef.current.value;\n        console.log(opinionRef.current.value);\n        if (message.length < 8) {\n            return errorDescription.current.innerHTML = \"Your Contact Message Must Contain at least 8 Caracters.\";\n        } else {\n            errorDescription.current.innerHTML = \"\";\n        }\n\n        try {\n            setLoading(true)\n            const savedContact = await axios.post(`/contacts/${userID}`, { contact_message: contact });\n            setLoading(false)\n            setData([...data, savedContact.data]);\n            successMessage.current.textContent = 'Your Contact added Successfully';\n            opinionRef.current.value = \"\";\n            setTimeout(()=>{\n                successMessage.current.textContent = \"\";\n            }, 2000);\n\n        } catch (error) {\n            console.log(error.response.data.message)\n            setError(error.response.data.message);\n            alert(\"Somthing Went Wrong !!!!!\")\n            return\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Box component=\"form\" onSubmit={handleADDContact}>\n                <Typography variant='h6' sx={{ m: 1 }}>Contact us :</Typography>\n                <TextField\n                    label=\"Contact us\"\n                    multiline\n                    rows={5}\n                    onChange={(e) => setContact(e.target.value)}\n                    inputRef={opinionRef}\n                />\n                <Typography varaint='caption' ref={errorDescription} sx={{ color: \"red\", m: 1 }} ></Typography>\n                <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    sx={{ m: 2 }}\n                    disabled={loading}\n                >\n                    add contact\n                </Button>\n            </Box>\n        </React.Fragment>\n    )\n}\n\nexport default ADDContact"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,GAAG,EAAEC,SAAS,EAAEC,SAAS,EAAEC,UAAU,EAAEC,MAAM,QAAQ,eAAe;AAAA;AAE7E,SAASC,UAAU,CAACC,UAAU,EAAEC,UAAU,EAAEC,OAAO,EAAEC,gBAAgB,EAAE;EAEnE,MAAMC,gBAAgB,GAAG,MAAOC,KAAK,IAAK;IACtCA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMC,OAAO,GAAGP,UAAU,CAACQ,OAAO,CAACC,KAAK;IACxCC,OAAO,CAACC,GAAG,CAACX,UAAU,CAACQ,OAAO,CAACC,KAAK,CAAC;IACrC,IAAIF,OAAO,CAACK,MAAM,GAAG,CAAC,EAAE;MACpB,OAAOT,gBAAgB,CAACK,OAAO,CAACK,SAAS,GAAG,yDAAyD;IACzG,CAAC,MAAM;MACHV,gBAAgB,CAACK,OAAO,CAACK,SAAS,GAAG,EAAE;IAC3C;IAEA,IAAI;MACAC,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMC,YAAY,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAE,aAAYC,MAAO,EAAC,EAAE;QAAEC,eAAe,EAAEC;MAAQ,CAAC,CAAC;MAC1FN,UAAU,CAAC,KAAK,CAAC;MACjBO,OAAO,CAAC,CAAC,GAAGC,IAAI,EAAEP,YAAY,CAACO,IAAI,CAAC,CAAC;MACrCC,cAAc,CAACf,OAAO,CAACgB,WAAW,GAAG,iCAAiC;MACtExB,UAAU,CAACQ,OAAO,CAACC,KAAK,GAAG,EAAE;MAC7BgB,UAAU,CAAC,MAAI;QACXF,cAAc,CAACf,OAAO,CAACgB,WAAW,GAAG,EAAE;MAC3C,CAAC,EAAE,IAAI,CAAC;IAEZ,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZhB,OAAO,CAACC,GAAG,CAACe,KAAK,CAACC,QAAQ,CAACL,IAAI,CAACf,OAAO,CAAC;MACxCqB,QAAQ,CAACF,KAAK,CAACC,QAAQ,CAACL,IAAI,CAACf,OAAO,CAAC;MACrCsB,KAAK,CAAC,2BAA2B,CAAC;MAClC;IACJ;EACJ,CAAC;EAED,oBACI,QAAC,KAAK,CAAC,QAAQ;IAAA,uBACX,QAAC,GAAG;MAAC,SAAS,EAAC,MAAM;MAAC,QAAQ,EAAEzB,gBAAiB;MAAA,wBAC7C,QAAC,UAAU;QAAC,OAAO,EAAC,IAAI;QAAC,EAAE,EAAE;UAAE0B,CAAC,EAAE;QAAE,CAAE;QAAA,UAAC;MAAY;QAAA;QAAA;QAAA;MAAA,QAAa,eAChE,QAAC,SAAS;QACN,KAAK,EAAC,YAAY;QAClB,SAAS;QACT,IAAI,EAAE,CAAE;QACR,QAAQ,EAAGC,CAAC,IAAK9B,UAAU,CAAC8B,CAAC,CAACC,MAAM,CAACvB,KAAK,CAAE;QAC5C,QAAQ,EAAET;MAAW;QAAA;QAAA;QAAA;MAAA,QACvB,eACF,QAAC,UAAU;QAAC,OAAO,EAAC,SAAS;QAAC,GAAG,EAAEG,gBAAiB;QAAC,EAAE,EAAE;UAAE8B,KAAK,EAAE,KAAK;UAAEH,CAAC,EAAE;QAAE;MAAE;QAAA;QAAA;QAAA;MAAA,QAAe,eAC/F,QAAC,MAAM;QACH,IAAI,EAAC,QAAQ;QACb,OAAO,EAAC,WAAW;QACnB,KAAK,EAAC,SAAS;QACf,EAAE,EAAE;UAAEA,CAAC,EAAE;QAAE,CAAE;QACb,QAAQ,EAAE5B,OAAQ;QAAA,UACrB;MAED;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACP;IAAA;IAAA;IAAA;EAAA,QACO;AAEzB;AAAC,KAvDQH,UAAU;AAyDnB,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}