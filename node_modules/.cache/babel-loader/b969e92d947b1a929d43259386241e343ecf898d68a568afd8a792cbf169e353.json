{"ast":null,"code":"import { ACTIONS } from \"./FilterSidebarContext\";\nexport const FilterListReducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_COMPUTERS\":\n      return {\n        ...state,\n        computers: action.payload\n      };\n    case ACTIONS.ALL:\n      return {\n        ...state,\n        computers: action.payload\n      };\n    case ACTIONS.PRICE_ASC:\n      const orderAscending = state.computers.sort((p, c) => p.price - c.price);\n      return {\n        ...state,\n        computers: orderAscending\n      };\n    case ACTIONS.PRICE_DESC:\n      const orderDescending = state.computers.sort((p, c) => c.price - p.price);\n      return {\n        ...state,\n        computers: orderDescending\n      };\n    case ACTIONS.IN_STOCK:\n      const inStockOnly = state.computers.filter(comp => comp.inStock === true);\n      return {\n        ...state,\n        computers: inStockOnly\n      };\n    case ACTIONS.DELETE_FILTER:\n      const ComputersFromLocalStorage = localStorage.getItem('initialComputers');\n      const Computerscov = JSON.parse(ComputersFromLocalStorage);\n      return {\n        ...state,\n        computers: Computerscov\n      };\n    default:\n      return state;\n  }\n};\n_c = FilterListReducer;\nexport const FilterReducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.INIT:\n      return {\n        ...state,\n        products: action.payload\n      };\n    case ACTIONS.ALL:\n      return {\n        ...state,\n        products: action.payload\n      };\n    case ACTIONS.PRICE_ASC:\n      const orderAscending = state.products.sort((p, c) => p.price - c.price);\n      return {\n        ...state,\n        products: orderAscending\n      };\n    case ACTIONS.PRICE_DESC:\n      const orderDescending = state.products.sort((p, c) => c.price - p.price);\n      return {\n        ...state,\n        products: orderDescending\n      };\n    case ACTIONS.IN_STOCK:\n      const inStockOnly = state.products.filter(comp => comp.inStock === true);\n      return {\n        ...state,\n        products: inStockOnly\n      };\n    case ACTIONS.TOGGLE_CATEGORY:\n      const updatedCateg = {\n        ...state.toggle,\n        [action.payload]: !state.toggle[action.payload]\n      };\n      const productsliststorage = localStorage.getItem('initialComputers');\n      const Computerscovs = JSON.parse(productsliststorage);\n      const updatedProducts = Computerscovs.filter(prod => prod.type.toLowerCase() === action.payload.toLowerCase());\n      Object.keys(updatedCateg).forEach(key => {\n        if (key !== action.payload && updatedCateg[key] === true) {\n          updatedCateg[key] = false;\n        }\n      });\n      return {\n        ...state,\n        toggle: updatedCateg,\n        products: updatedProducts\n      };\n    case ACTIONS.TOGGLE_TYPE:\n      const updatedTypes = {\n        ...state.toggle,\n        [action.payload]: !state.toggle[action.payload]\n      };\n      const productsliststor = localStorage.getItem('initialComputers');\n      const Computerscovss = JSON.parse(productsliststor);\n      const updatedPro = Computerscovss.filter(prod => prod.type.toLowerCase() === action.payload.toLowerCase());\n      console.log(updatedPro);\n      Object.keys(updatedTypes).forEach(key => {\n        if (key !== action.payload && updatedTypes[key] === true) {\n          updatedTypes[key] = false;\n        }\n      });\n      return {\n        ...state,\n        types: updatedTypes,\n        products: updatedPro\n      };\n    case ACTIONS.DELETE_FILTER:\n      const ComputersFromLocalStorage = localStorage.getItem('initialComputers');\n      const Computerscov = JSON.parse(ComputersFromLocalStorage);\n      return {\n        ...state,\n        products: Computerscov\n      };\n    default:\n      return state;\n  }\n};\n_c2 = FilterReducer;\nvar _c, _c2;\n$RefreshReg$(_c, \"FilterListReducer\");\n$RefreshReg$(_c2, \"FilterReducer\");","map":{"version":3,"names":["ACTIONS","FilterListReducer","state","action","type","computers","payload","ALL","PRICE_ASC","orderAscending","sort","p","c","price","PRICE_DESC","orderDescending","IN_STOCK","inStockOnly","filter","comp","inStock","DELETE_FILTER","ComputersFromLocalStorage","localStorage","getItem","Computerscov","JSON","parse","FilterReducer","INIT","products","TOGGLE_CATEGORY","updatedCateg","toggle","productsliststorage","Computerscovs","updatedProducts","prod","toLowerCase","Object","keys","forEach","key","TOGGLE_TYPE","updatedTypes","productsliststor","Computerscovss","updatedPro","console","log","types"],"sources":["/home/hana/Desktop/Projects/level1/space-infoPC/client/src/context/Reducers.js"],"sourcesContent":["import { ACTIONS } from \"./FilterSidebarContext\";\n\n\n\nexport const FilterListReducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_COMPUTERS\":\n      return { ...state, computers: action.payload }\n    case ACTIONS.ALL:\n      return { ...state, computers: action.payload }\n    case ACTIONS.PRICE_ASC:\n      const orderAscending = state.computers.sort((p, c) => p.price - c.price);\n      return { ...state, computers: orderAscending }\n    case ACTIONS.PRICE_DESC:\n      const orderDescending = state.computers.sort((p, c) => c.price - p.price);\n      return { ...state, computers: orderDescending }\n    case ACTIONS.IN_STOCK:\n      const inStockOnly = state.computers.filter(comp => comp.inStock === true)\n      return { ...state, computers: inStockOnly }\n    case ACTIONS.DELETE_FILTER:\n      const ComputersFromLocalStorage = localStorage.getItem('initialComputers');\n      const Computerscov = JSON.parse(ComputersFromLocalStorage);\n      return { ...state, computers: Computerscov }\n    default:\n      return state\n  }\n}\n\n\n\n\nexport const FilterReducer = (state, action) => {\n\n  switch (action.type) {\n\n    case ACTIONS.INIT:\n      return { ...state, products: action.payload }\n\n    case ACTIONS.ALL:\n      return { ...state, products: action.payload }\n\n    case ACTIONS.PRICE_ASC:\n      const orderAscending = state.products.sort((p, c) => p.price - c.price);\n      return { ...state, products: orderAscending }\n\n    case ACTIONS.PRICE_DESC:\n      const orderDescending = state.products.sort((p, c) => c.price - p.price);\n      return { ...state, products: orderDescending }\n\n    case ACTIONS.IN_STOCK:\n      const inStockOnly = state.products.filter(comp => comp.inStock === true)\n      return { ...state, products: inStockOnly }\n\n    case ACTIONS.TOGGLE_CATEGORY:\n      const updatedCateg = { ...state.toggle, [action.payload] : !state.toggle[action.payload] };\n      const productsliststorage = localStorage.getItem('initialComputers');\n      const Computerscovs = JSON.parse(productsliststorage);\n      const updatedProducts = Computerscovs.filter(prod => prod.type.toLowerCase() === action.payload.toLowerCase());\n      Object.keys(updatedCateg).forEach(key => {\n        if (key !== action.payload && updatedCateg[key] === true) {\n          updatedCateg[key] = false;\n        }\n      });\n      return {\n        ...state,\n        toggle: updatedCateg,\n        products: updatedProducts,\n      };\n\n    case ACTIONS.TOGGLE_TYPE:\n      const updatedTypes = { ...state.toggle, [action.payload]: !state.toggle[action.payload] }\n\n      const productsliststor = localStorage.getItem('initialComputers');\n      const Computerscovss = JSON.parse(productsliststor);\n\n      const updatedPro = Computerscovss.filter(prod => prod.type.toLowerCase() === action.payload.toLowerCase());\n      console.log(updatedPro)\n      Object.keys(updatedTypes).forEach(key => {\n        if (key !== action.payload && updatedTypes[key] === true) {\n          updatedTypes[key] = false;\n        }\n      });\n      return {\n        ...state,\n        types: updatedTypes,\n        products: updatedPro,\n      };\n\n      case ACTIONS.DELETE_FILTER:\n        const ComputersFromLocalStorage = localStorage.getItem('initialComputers');\n        const Computerscov = JSON.parse(ComputersFromLocalStorage);\n        return { ...state, products: Computerscov }\n\n    default:\n      return state;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}