{"ast":null,"code":"var _jsxFileName = \"/home/hana/Desktop/Projects/level1/space-infoPC/client/src/context/filterProductContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useReducer, useContext } from 'react';\nimport { computerReducer } from './Reducers';\nimport useFetch from '../hooks/useFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ComputerContext = /*#__PURE__*/createContext();\nconst initialState = {\n  computers: [],\n  data: [],\n  filteredComputers: [],\n  filters: {\n    type: {\n      asus: false,\n      lenovo: false,\n      macos: false\n    },\n    category: {\n      laptop: false,\n      desktop: false\n    },\n    price: \"\"\n  }\n};\nexport const ComputerContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`/products`);\n  initialState.computers = data;\n  const [state, dispatch] = useReducer(computerReducer, initialState);\n  const setComputers = computers => {\n    dispatch({\n      type: \"SET_COMPUTERS\",\n      payload: computers\n    });\n  };\n  const filterComputers = () => {\n    dispatch({\n      type: \"FILTER_COMPUTERS\"\n    });\n  };\n  const updateFilters = (filterType, filterName, filterValue) => {\n    dispatch({\n      type: \"UPDATE_FILTERS\",\n      filterType,\n      filterName,\n      filterValue\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(ComputerContext.Provider, {\n    value: {\n      state,\n      loading,\n      error,\n      setComputers,\n      filterComputers,\n      updateFilters\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(ComputerContextProvider, \"2ls6gqbLDH7OUDN3vNbX0L9QNAQ=\", false, function () {\n  return [useFetch];\n});\n_c = ComputerContextProvider;\nexport const FilterComputersState = () => {\n  _s2();\n  return useContext(ComputerContext);\n};\n_s2(FilterComputersState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n_c2 = FilterComputersState;\nvar _c, _c2;\n$RefreshReg$(_c, \"ComputerContextProvider\");\n$RefreshReg$(_c2, \"FilterComputersState\");","map":{"version":3,"names":["React","createContext","useReducer","useContext","computerReducer","useFetch","ComputerContext","initialState","computers","data","filteredComputers","filters","type","asus","lenovo","macos","category","laptop","desktop","price","ComputerContextProvider","children","loading","error","state","dispatch","setComputers","payload","filterComputers","updateFilters","filterType","filterName","filterValue","FilterComputersState"],"sources":["/home/hana/Desktop/Projects/level1/space-infoPC/client/src/context/filterProductContext.js"],"sourcesContent":["import React, { createContext, useReducer, useContext } from 'react'\nimport { computerReducer } from './Reducers';\nimport useFetch from '../hooks/useFetch';\nconst ComputerContext = createContext();\n\nconst initialState = {\n    computers: [],\n    data : [],\n    filteredComputers: [],\n    filters: {\n        type: {\n            asus: false,\n            lenovo: false,\n            macos: false,\n        },\n        category: {\n            laptop: false,\n            desktop: false,\n        },\n        price: \"\",\n    },\n};\n\nexport const ComputerContextProvider = ({ children }) => {\n\n    const { data, loading, error } = useFetch(`/products`);\n\n    initialState.computers = data;\n\n    const [state, dispatch] = useReducer(computerReducer, initialState);\n\n    const setComputers = (computers) => {\n        dispatch({ type: \"SET_COMPUTERS\", payload: computers });\n    };\n\n    const filterComputers = () => {\n        dispatch({ type: \"FILTER_COMPUTERS\" });\n    };\n\n    const updateFilters = (filterType, filterName, filterValue) => {\n        dispatch({\n            type: \"UPDATE_FILTERS\",\n            filterType,\n            filterName,\n            filterValue,\n        });\n    };\n\n    return (\n        <ComputerContext.Provider value={{ state, loading, error, setComputers, filterComputers, updateFilters }}>\n            {children}\n        </ComputerContext.Provider>\n    )\n}\n\nexport const FilterComputersState = () => {\n    return useContext(ComputerContext);\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,QAAQ,OAAO;AACpE,SAASC,eAAe,QAAQ,YAAY;AAC5C,OAAOC,QAAQ,MAAM,mBAAmB;AAAC;AACzC,MAAMC,eAAe,gBAAGL,aAAa,EAAE;AAEvC,MAAMM,YAAY,GAAG;EACjBC,SAAS,EAAE,EAAE;EACbC,IAAI,EAAG,EAAE;EACTC,iBAAiB,EAAE,EAAE;EACrBC,OAAO,EAAE;IACLC,IAAI,EAAE;MACFC,IAAI,EAAE,KAAK;MACXC,MAAM,EAAE,KAAK;MACbC,KAAK,EAAE;IACX,CAAC;IACDC,QAAQ,EAAE;MACNC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;IACb,CAAC;IACDC,KAAK,EAAE;EACX;AACJ,CAAC;AAED,OAAO,MAAMC,uBAAuB,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAEhD,MAAM;IAAEZ,IAAI;IAAEa,OAAO;IAAEC;EAAM,CAAC,GAAGlB,QAAQ,CAAE,WAAU,CAAC;EAEtDE,YAAY,CAACC,SAAS,GAAGC,IAAI;EAE7B,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,UAAU,CAACE,eAAe,EAAEG,YAAY,CAAC;EAEnE,MAAMmB,YAAY,GAAIlB,SAAS,IAAK;IAChCiB,QAAQ,CAAC;MAAEb,IAAI,EAAE,eAAe;MAAEe,OAAO,EAAEnB;IAAU,CAAC,CAAC;EAC3D,CAAC;EAED,MAAMoB,eAAe,GAAG,MAAM;IAC1BH,QAAQ,CAAC;MAAEb,IAAI,EAAE;IAAmB,CAAC,CAAC;EAC1C,CAAC;EAED,MAAMiB,aAAa,GAAG,CAACC,UAAU,EAAEC,UAAU,EAAEC,WAAW,KAAK;IAC3DP,QAAQ,CAAC;MACLb,IAAI,EAAE,gBAAgB;MACtBkB,UAAU;MACVC,UAAU;MACVC;IACJ,CAAC,CAAC;EACN,CAAC;EAED,oBACI,QAAC,eAAe,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAER,KAAK;MAAEF,OAAO;MAAEC,KAAK;MAAEG,YAAY;MAAEE,eAAe;MAAEC;IAAc,CAAE;IAAA,UACpGR;EAAQ;IAAA;IAAA;IAAA;EAAA,QACc;AAEnC,CAAC;AAAA,GA9BYD,uBAAuB;EAAA,QAECf,QAAQ;AAAA;AAAA,KAFhCe,uBAAuB;AAgCpC,OAAO,MAAMa,oBAAoB,GAAG,MAAM;EAAA;EACtC,OAAO9B,UAAU,CAACG,eAAe,CAAC;AACtC,CAAC;AAAC,IAFW2B,oBAAoB;AAAA,MAApBA,oBAAoB;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}