{"ast":null,"code":"var _jsxFileName = \"/home/hana/Desktop/Projects/level1/space-infoPC/client/src/context/FilterSidebarContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useReducer, createContext, useContext } from 'react';\nimport { FilterNavReducer, UpdateCheckboxsReducer } from './Reducers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilterSideContext = /*#__PURE__*/createContext();\nconst initialState = {\n  categories: {\n    laptop: false,\n    desktop: false,\n    phone: false\n  },\n  types: {\n    asus: false,\n    lenovo: false,\n    mac: false,\n    dell: false\n  }\n};\nconst initState = {\n  computers: [],\n  filtredComputers: []\n};\nexport const ACTIONS_NAV = {\n  TYPE: {\n    ASUS: \"asus\",\n    LENOVO: \"lenovo\",\n    MACOS: \"macos\",\n    DELL: \"dell\"\n  },\n  CATEGORIE: {\n    LAPTOP: \"laptop\",\n    DESKTOP: \"desktop\",\n    PHONE: \"phone\"\n  }\n};\nexport default function FilterSidebarContext(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [checkboxstate, dispatchCheckbox] = useReducer(UpdateCheckboxsReducer, initialState);\n  const [statenav, dispatchFilternav] = useReducer(FilterNavReducer, initState);\n  function handleCategoryToggle(category) {\n    dispatchCheckbox({\n      type: 'TOGGLE_CATEGORY',\n      payload: category\n    });\n  }\n  function handleTypeToggle(type) {\n    dispatchCheckbox({\n      type: 'TOGGLE_TYPE',\n      payload: type\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(FilterSideContext.Provider, {\n    value: {\n      statenav,\n      dispatchFilternav,\n      checkboxstate,\n      handleCategoryToggle,\n      handleTypeToggle\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(FilterSidebarContext, \"f0xXCJMFicVbwv6Zjlfyu7FEurA=\");\n_c = FilterSidebarContext;\nexport const FilterSidebarState = () => {\n  _s2();\n  return useContext(FilterSideContext);\n};\n_s2(FilterSidebarState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n_c2 = FilterSidebarState;\nvar _c, _c2;\n$RefreshReg$(_c, \"FilterSidebarContext\");\n$RefreshReg$(_c2, \"FilterSidebarState\");","map":{"version":3,"names":["React","useReducer","createContext","useContext","FilterNavReducer","UpdateCheckboxsReducer","FilterSideContext","initialState","categories","laptop","desktop","phone","types","asus","lenovo","mac","dell","initState","computers","filtredComputers","ACTIONS_NAV","TYPE","ASUS","LENOVO","MACOS","DELL","CATEGORIE","LAPTOP","DESKTOP","PHONE","FilterSidebarContext","children","checkboxstate","dispatchCheckbox","statenav","dispatchFilternav","handleCategoryToggle","category","type","payload","handleTypeToggle","FilterSidebarState"],"sources":["/home/hana/Desktop/Projects/level1/space-infoPC/client/src/context/FilterSidebarContext.js"],"sourcesContent":["import React, { useReducer, createContext, useContext } from 'react'\nimport { FilterNavReducer, UpdateCheckboxsReducer, } from './Reducers';\n\nconst FilterSideContext = createContext();\n\n\nconst initialState = {\n  categories: {\n    laptop: false,\n    desktop: false,\n    phone: false,\n  },\n\n  types: {\n    asus: false,\n    lenovo: false,\n    mac: false,\n    dell: false,\n  },\n};\n\nconst initState = {\n  computers: [],\n  filtredComputers: [],\n}\n\nexport const ACTIONS_NAV = {\n\n  TYPE: {\n    ASUS: \"asus\",\n    LENOVO: \"lenovo\",\n    MACOS: \"macos\",\n    DELL: \"dell\"\n  },\n\n  CATEGORIE: {\n    LAPTOP: \"laptop\",\n    DESKTOP: \"desktop\",\n    PHONE: \"phone\"\n  },\n\n}\n\nexport default function FilterSidebarContext({ children }) {\n  const [checkboxstate, dispatchCheckbox] = useReducer(UpdateCheckboxsReducer, initialState);\n\n  const [statenav, dispatchFilternav] = useReducer(FilterNavReducer, initState);\n\n  function handleCategoryToggle(category) {\n    dispatchCheckbox({ type: 'TOGGLE_CATEGORY', payload: category });\n  }\n\n  function handleTypeToggle(type) {\n    dispatchCheckbox({ type: 'TOGGLE_TYPE', payload: type });\n  }\n\n  return (\n    <FilterSideContext.Provider value={{ statenav, dispatchFilternav, checkboxstate, handleCategoryToggle, handleTypeToggle }}>\n      {children}\n    </FilterSideContext.Provider>\n  )\n}\n\nexport const FilterSidebarState = () => {\n  return useContext(FilterSideContext);\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACpE,SAASC,gBAAgB,EAAEC,sBAAsB,QAAS,YAAY;AAAC;AAEvE,MAAMC,iBAAiB,gBAAGJ,aAAa,EAAE;AAGzC,MAAMK,YAAY,GAAG;EACnBC,UAAU,EAAE;IACVC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC;EAEDC,KAAK,EAAE;IACLC,IAAI,EAAE,KAAK;IACXC,MAAM,EAAE,KAAK;IACbC,GAAG,EAAE,KAAK;IACVC,IAAI,EAAE;EACR;AACF,CAAC;AAED,MAAMC,SAAS,GAAG;EAChBC,SAAS,EAAE,EAAE;EACbC,gBAAgB,EAAE;AACpB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG;EAEzBC,IAAI,EAAE;IACJC,IAAI,EAAE,MAAM;IACZC,MAAM,EAAE,QAAQ;IAChBC,KAAK,EAAE,OAAO;IACdC,IAAI,EAAE;EACR,CAAC;EAEDC,SAAS,EAAE;IACTC,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE,SAAS;IAClBC,KAAK,EAAE;EACT;AAEF,CAAC;AAED,eAAe,SAASC,oBAAoB,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EACvD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGhC,UAAU,CAACI,sBAAsB,EAAEE,YAAY,CAAC;EAE1F,MAAM,CAAC2B,QAAQ,EAAEC,iBAAiB,CAAC,GAAGlC,UAAU,CAACG,gBAAgB,EAAEa,SAAS,CAAC;EAE7E,SAASmB,oBAAoB,CAACC,QAAQ,EAAE;IACtCJ,gBAAgB,CAAC;MAAEK,IAAI,EAAE,iBAAiB;MAAEC,OAAO,EAAEF;IAAS,CAAC,CAAC;EAClE;EAEA,SAASG,gBAAgB,CAACF,IAAI,EAAE;IAC9BL,gBAAgB,CAAC;MAAEK,IAAI,EAAE,aAAa;MAAEC,OAAO,EAAED;IAAK,CAAC,CAAC;EAC1D;EAEA,oBACE,QAAC,iBAAiB,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEJ,QAAQ;MAAEC,iBAAiB;MAAEH,aAAa;MAAEI,oBAAoB;MAAEI;IAAiB,CAAE;IAAA,UACvHT;EAAQ;IAAA;IAAA;IAAA;EAAA,QACkB;AAEjC;AAAC,GAlBuBD,oBAAoB;AAAA,KAApBA,oBAAoB;AAoB5C,OAAO,MAAMW,kBAAkB,GAAG,MAAM;EAAA;EACtC,OAAOtC,UAAU,CAACG,iBAAiB,CAAC;AACtC,CAAC;AAAA,IAFYmC,kBAAkB;AAAA,MAAlBA,kBAAkB;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}