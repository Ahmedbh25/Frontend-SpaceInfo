{"ast":null,"code":"var _jsxFileName = \"/home/hana/Desktop/Projects/level1/space-infoPC/client/src/pages/products/Products.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { Typography, Box, Container, Grid, Button } from '@mui/material';\nimport useFetch from \"../../hooks/useFetch.js\";\nimport ProductsList from '../../components/productsList/ProductsList';\nimport Loading from '../../components/Loading/Loading';\nimport Filter from '../../components/filter/Filter.js';\nimport { FilterComputersState } from '../../context/filterProductContext.js';\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Products() {\n  _s();\n  //const { data, loading, error } = useFetch(`/products`);\n\n  const [open, setOpen] = useState(true);\n  const {\n    loading,\n    error,\n    state,\n    dispatch,\n    updateFilters\n  } = FilterComputersState();\n  const handleCheckboxChange = event => {\n    const {\n      name,\n      checked\n    } = event.target;\n    const [filterType, filterName] = name.split(\"-\");\n    console.log(state);\n\n    // Only allow one checkbox to be selected from each filter type.\n\n    if (checked) {\n      Object.keys(state.filters[filterType]).forEach(name => {\n        updateFilters(filterType, name, false);\n      });\n    }\n    updateFilters(filterType, filterName, checked);\n  };\n  console.log(state.computers);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: state.categories.laptop,\n              onChange: () => handleCategoryToggle('laptop')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 9\n            }, this), \"Laptop\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: state.categories.desktop,\n              onChange: () => handleCategoryToggle('desktop')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 9\n            }, this), \"Desktop\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: state.types.asus,\n              onChange: () => handleTypeToggle('asus')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 9\n            }, this), \"Asus\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: state.types.lenovo,\n              onChange: () => handleTypeToggle('lenovo')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 9\n            }, this), \"Lenovo\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: state.types.mac,\n              onChange: () => handleTypeToggle('mac')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 9\n            }, this), \"Mac OS\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: state.types.mac,\n              onChange: () => handleTypeToggle('mac')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 9\n            }, this), \"DELL\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 9,\n        sx: {\n          bgcolor: \"rgba(0,0,0,0.2)\",\n          color: \"black\",\n          pt: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(Container, {\n              children: /*#__PURE__*/_jsxDEV(ProductsList, {\n                data: state.computers\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Products, \"dVkDIfRb5RN4FjtonjBYYwpg89o=\");\n_c = Products;\nexport default Products;\nvar _c;\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["React","useState","useContext","Typography","Box","Container","Grid","Button","useFetch","ProductsList","Loading","Filter","FilterComputersState","Products","open","setOpen","loading","error","state","dispatch","updateFilters","handleCheckboxChange","event","name","checked","target","filterType","filterName","split","console","log","Object","keys","filters","forEach","computers","categories","laptop","handleCategoryToggle","desktop","types","asus","handleTypeToggle","lenovo","mac","bgcolor","color","pt"],"sources":["/home/hana/Desktop/Projects/level1/space-infoPC/client/src/pages/products/Products.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Typography, Box, Container, Grid, Button } from '@mui/material';\nimport useFetch from \"../../hooks/useFetch.js\";\nimport ProductsList from '../../components/productsList/ProductsList';\nimport Loading from '../../components/Loading/Loading';\nimport Filter from '../../components/filter/Filter.js';\nimport { FilterComputersState } from '../../context/filterProductContext.js';\n\nimport \"./style.css\";\n\nfunction Products() {\n  //const { data, loading, error } = useFetch(`/products`);\n\n  const [open, setOpen] = useState(true);\n\n  const { loading, error, state,dispatch, updateFilters } = FilterComputersState();\n  \n  const handleCheckboxChange = (event) => {\n    const { name, checked } = event.target;\n\n    const [filterType, filterName] = name.split(\"-\");\n    console.log(state)\n\n    // Only allow one checkbox to be selected from each filter type.\n\n    if (checked) {\n      Object.keys(state.filters[filterType]).forEach((name) => {\n        updateFilters(filterType, name, false);\n      });\n    }\n\n    updateFilters(filterType, filterName, checked);\n  };\n  \n  console.log(state.computers)\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={2}>\n      <Grid item xs={3} >\n\n    <div>\n      <h2>Categories</h2>\n      <label>\n        <input type=\"checkbox\" checked={state.categories.laptop} onChange={() => handleCategoryToggle('laptop')} />\n        Laptop\n      </label>\n      <label>\n        <input type=\"checkbox\" checked={state.categories.desktop} onChange={() => handleCategoryToggle('desktop')} />\n        Desktop\n      </label>\n      \n      <h2>Types</h2>\n      <label>\n        <input type=\"checkbox\" checked={state.types.asus} onChange={() => handleTypeToggle('asus')} />\n        Asus\n      </label>\n      <label>\n        <input type=\"checkbox\" checked={state.types.lenovo} onChange={() => handleTypeToggle('lenovo')} />\n        Lenovo\n      </label>\n      <label>\n        <input type=\"checkbox\" checked={state.types.mac} onChange={() => handleTypeToggle('mac')} />\n        Mac OS\n      </label>\n      <label>\n        <input type=\"checkbox\" checked={state.types.mac} onChange={() => handleTypeToggle('mac')} />\n        DELL\n      </label>\n    </div>\n  \n    </Grid>\n        <Grid item xs={9} sx={{ bgcolor: \"rgba(0,0,0,0.2)\", color: \"black\", pt: 10 }}>\n          <>\n            {loading ?\n\n              <Loading />\n              :\n              <Box >\n\n                <Container >\n                  <ProductsList data={state.computers} />\n\n                </Container>\n\n              </Box>\n            }\n\n          </>\n        </Grid>\n      </Grid>\n\n    </React.Fragment>\n  )\n}\n\nexport default Products"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}