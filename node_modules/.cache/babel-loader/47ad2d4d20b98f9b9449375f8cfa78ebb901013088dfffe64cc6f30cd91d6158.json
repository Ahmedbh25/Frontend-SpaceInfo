{"ast":null,"code":"import React__default from 'react';\nimport NavModuleCss from './index.module.css.js';\nimport { useController } from '../../modules/Controller.js';\nimport { useManager } from '../../modules/Manager.js';\nimport { composeCssClasses } from '../../utils/composeCssClasses.js';\nfunction Nav(_ref) {\n  let {\n    color,\n    activeColor,\n    position = {\n      bottom: '1.5rem',\n      left: '50%',\n      transform: 'translateX(-50%)'\n    }\n  } = _ref;\n  const {\n    state: {\n      slides,\n      totalSlides\n    }\n  } = useManager();\n  const {\n    state: {\n      activeSlide\n    },\n    changeSlide\n  } = useController();\n  function renderButtons() {\n    if (!totalSlides) return [];\n    const onClickHandler = slideNumber => {\n      if (slideNumber !== activeSlide) changeSlide(slideNumber);\n    };\n    return Array.from(slides.values()).map(_ref2 => {\n      let {\n        number\n      } = _ref2;\n      return (\n        // TODO: Deal with the disabled linting later:\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-noninteractive-element-interactions\n        React__default.createElement(\"li\", {\n          key: number,\n          className: composeCssClasses('hero-slider-nav-button', NavModuleCss.Button, {\n            className: NavModuleCss.Active,\n            useIf: activeSlide === number\n          }),\n          onClick: () => onClickHandler(number)\n        })\n      );\n    });\n  }\n  /**\n   * CSS variables for the transitions.\n   */\n  const CSSVariables = {\n    '--nav-color': color,\n    '--nav-active-color': activeColor\n  };\n  return React__default.createElement(\"ul\", {\n    className: composeCssClasses('hero-slider-nav-wrapper', NavModuleCss.Wrapper),\n    style: Object.assign(Object.assign({}, position), CSSVariables)\n  }, renderButtons());\n}\nNav.displayName = 'hero-slider/nav';\nexport { Nav };","map":{"version":3,"mappings":";;;;;AA0CM,SAAUA,GAAG,OAQR;EAAA,IARS;IAClBC,KAAK;IACLC,WAAW;IACXC,QAAQ,GAAG;MACTC,MAAM,EAAE,QAAQ;MAChBC,IAAI,EAAE,KAAK;MACXC,SAAS,EAAE;;EACZ,CACQ;EACT,MAAM;IACJC,KAAK,EAAE;MAAEC,MAAM;MAAEC;IAAW;EAAE,CAC/B,GAAGC,UAAU,EAAE;EAEhB,MAAM;IACJH,KAAK,EAAE;MAAEI;IAAW,CAAE;IACtBC;EAAW,CACZ,GAAGC,aAAa,EAAE;EAEnB,SAASC,aAAa;IACpB,IAAI,CAACL,WAAW,EAAE,OAAO,EAAE;IAE3B,MAAMM,cAAc,GAAIC,WAAmB,IAAI;MAC7C,IAAIA,WAAW,KAAKL,WAAW,EAAEC,WAAW,CAACI,WAAW,CAAC;IAC3D,CAAC;IAED,OAAOC,KAAK,CAACC,IAAI,CAACV,MAAM,CAACW,MAAM,EAAE,CAAC,CAACC,GAAG,CAAC,SAAe;MAAA,IAAd;QAAEC;MAAM,CAAE;MAChD;;;QAGEC;UACEC,GAAG,EAAEF,MAAM;UACXG,SAAS,EAAEC,iBAAiB,CAC1B,wBAAwB,EACxBC,YAAY,CAACC,MAAM,EACnB;YAAEH,SAAS,EAAEE,YAAY,CAACE,MAAM;YAAEC,KAAK,EAAElB,WAAW,KAAKU;UAAM,CAAE,CAClE;UACDS,OAAO,EAAE,MAAMf,cAAc,CAACM,MAAM;QAAC;MACrC;IAEN,CAAC,CAAC;;EAGJ;;AAEG;EACH,MAAMU,YAAY,GAAG;IACnB,aAAa,EAAE9B,KAAK;IACpB,oBAAoB,EAAEC;GACvB;EAED,OACEoB;IACEE,SAAS,EAAEC,iBAAiB,CAC1B,yBAAyB,EACzBC,YAAY,CAACM,OAAO,CACrB;IACDC,KAAK,EACAC,wCAAQ,CACR,cAAY;EAAA,GAGhBpB,aAAa,EAAE,CACb;AAET;AAECd,GAA+B,CAACmC,WAAW,GAAG,iBAAiB","names":["Nav","color","activeColor","position","bottom","left","transform","state","slides","totalSlides","useManager","activeSlide","changeSlide","useController","renderButtons","onClickHandler","slideNumber","Array","from","values","map","number","React","key","className","composeCssClasses","NavModuleCss","Button","Active","useIf","onClick","CSSVariables","Wrapper","style","Object","displayName"],"sources":["/home/hana/Desktop/Projects/level1/space-infoPC/client/node_modules/hero-slider/src/components/Nav/index.tsx"],"sourcesContent":["import React from 'react';\nimport NavModuleCss from './index.module.css';\nimport { useController } from '../../modules/Controller';\nimport { useManager } from '../../modules/Manager';\nimport { composeCssClasses } from '../../utils/composeCssClasses';\n\n/**\n * Defines the position of the navigation component.\n */\nexport interface NavPosition {\n  top?: React.CSSProperties['top'];\n  left?: React.CSSProperties['left'];\n  bottom?: React.CSSProperties['bottom'];\n  right?: React.CSSProperties['right'];\n  transform?: React.CSSProperties['transform'];\n}\n\n/**\n * `Nav` component props.\n */\nexport interface NavProps {\n  /**\n   * Object of CSS properties `top`, `left`, `bottom`, and `right` used to absolutely position elements.\n   * Aside from the former, you can also set the CSS `transform` property to help you center the element.\n   * @default\n   * {\n   *    bottom: '1.5rem',\n   *    left: '50%',\n   *    transform: 'translateX(-50%)'\n   * }\n   */\n  position?: NavPosition;\n  /**\n   * Defines `--nav-color` CSS variable.\n   */\n  color?: string;\n  /**\n   * Defines `--nav-active-color` CSS variable.\n   */\n  activeColor?: string;\n}\n\nexport function Nav({\n  color,\n  activeColor,\n  position = {\n    bottom: '1.5rem',\n    left: '50%',\n    transform: 'translateX(-50%)'\n  }\n}: NavProps) {\n  const {\n    state: { slides, totalSlides }\n  } = useManager();\n\n  const {\n    state: { activeSlide },\n    changeSlide\n  } = useController();\n\n  function renderButtons() {\n    if (!totalSlides) return [];\n\n    const onClickHandler = (slideNumber: number) => {\n      if (slideNumber !== activeSlide) changeSlide(slideNumber);\n    };\n\n    return Array.from(slides.values()).map(({ number }) => {\n      return (\n        // TODO: Deal with the disabled linting later:\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-noninteractive-element-interactions\n        <li\n          key={number}\n          className={composeCssClasses(\n            'hero-slider-nav-button',\n            NavModuleCss.Button,\n            { className: NavModuleCss.Active, useIf: activeSlide === number }\n          )}\n          onClick={() => onClickHandler(number)}\n        />\n      );\n    });\n  }\n\n  /**\n   * CSS variables for the transitions.\n   */\n  const CSSVariables = {\n    '--nav-color': color,\n    '--nav-active-color': activeColor\n  };\n\n  return (\n    <ul\n      className={composeCssClasses(\n        'hero-slider-nav-wrapper',\n        NavModuleCss.Wrapper\n      )}\n      style={{\n        ...position,\n        ...CSSVariables\n      }}\n    >\n      {renderButtons()}\n    </ul>\n  );\n}\n\n(Nav as React.FunctionComponent).displayName = 'hero-slider/nav';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}