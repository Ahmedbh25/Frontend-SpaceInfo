{"ast":null,"code":"import { ACTIONS } from \"./FilterSidebarContext\";\nexport const FilterListReducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_COMPUTERS\":\n      return {\n        ...state,\n        products: action.payload\n      };\n    case ACTIONS.ALL:\n      return {\n        ...state,\n        products: action.payload\n      };\n    case ACTIONS.PRICE_ASC:\n      const orderAscending = state.products.sort((p, c) => p.price - c.price);\n      return {\n        ...state,\n        products: orderAscending\n      };\n    case ACTIONS.PRICE_DESC:\n      const orderDescending = state.products.sort((p, c) => c.price - p.price);\n      return {\n        ...state,\n        products: orderDescending\n      };\n    case ACTIONS.IN_STOCK:\n      const inStockOnly = state.products.filter(comp => comp.inStock === true);\n      return {\n        ...state,\n        products: inStockOnly\n      };\n    case ACTIONS.DELETE_FILTER:\n      const productsFromLocalStorage = localStorage.getItem('initialComputers');\n      const productscov = JSON.parse(productsFromLocalStorage);\n      return {\n        ...state,\n        products: productscov\n      };\n    default:\n      return state;\n  }\n};\n_c = FilterListReducer;\nexport const FilterReducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.INIT:\n      return {\n        ...state,\n        products: action.payload\n      };\n    case ACTIONS.ALL:\n      return {\n        ...state,\n        products: action.payload\n      };\n    case ACTIONS.PRICE_ASC:\n      const orderAscending = state.products.sort((p, c) => p.price - c.price);\n      return {\n        ...state,\n        products: orderAscending\n      };\n    case ACTIONS.PRICE_DESC:\n      const orderDescending = state.products.sort((p, c) => c.price - p.price);\n      return {\n        ...state,\n        products: orderDescending\n      };\n    case ACTIONS.IN_STOCK:\n      const inStockOnly = state.products.filter(comp => comp.inStock === true);\n      return {\n        ...state,\n        products: inStockOnly\n      };\n    case ACTIONS.TOGGLE_CATEGORY:\n      const updatedCateg = {\n        ...state.toggle,\n        [action.payload]: !state.toggle[action.payload]\n      };\n      const productsliststorage = localStorage.getItem('initialComputers');\n      const Computerscovs = JSON.parse(productsliststorage);\n      const updatedProducts = Computerscovs.filter(prod => prod.categorie.toLowerCase() === action.payload.toLowerCase());\n      Object.keys(updatedCateg).forEach(key => {\n        if (key !== action.payload && updatedCateg[key] === true) {\n          updatedCateg[key] = false;\n        }\n      });\n      return {\n        ...state,\n        toggle: updatedCateg,\n        products: updatedProducts\n      };\n    case ACTIONS.TOGGLE_TYPE:\n      const updatedTypes = {\n        ...state.toggle,\n        [action.payload]: !state.toggle[action.payload]\n      };\n      const productsliststor = localStorage.getItem('initialComputers');\n      const Computerscovss = JSON.parse(productsliststor);\n      const updatedPro = Computerscovss.filter(prod => prod.type.toLowerCase() === action.payload.toLowerCase());\n      Object.keys(updatedTypes).forEach(key => {\n        if (key !== action.payload && updatedTypes[key] === true) {\n          updatedTypes[key] = false;\n        }\n      });\n      return {\n        ...state,\n        types: updatedTypes,\n        products: updatedPro\n      };\n    case ACTIONS.DELETE_FILTER:\n      const ComputersFromLocalStorage = localStorage.getItem('initialComputers');\n      const Computerscov = JSON.parse(ComputersFromLocalStorage);\n      return {\n        ...state,\n        products: Computerscov\n      };\n    default:\n      return state;\n  }\n};\n_c2 = FilterReducer;\nvar _c, _c2;\n$RefreshReg$(_c, \"FilterListReducer\");\n$RefreshReg$(_c2, \"FilterReducer\");","map":{"version":3,"names":["ACTIONS","FilterListReducer","state","action","type","products","payload","ALL","PRICE_ASC","orderAscending","sort","p","c","price","PRICE_DESC","orderDescending","IN_STOCK","inStockOnly","filter","comp","inStock","DELETE_FILTER","productsFromLocalStorage","localStorage","getItem","productscov","JSON","parse","FilterReducer","INIT","TOGGLE_CATEGORY","updatedCateg","toggle","productsliststorage","Computerscovs","updatedProducts","prod","categorie","toLowerCase","Object","keys","forEach","key","TOGGLE_TYPE","updatedTypes","productsliststor","Computerscovss","updatedPro","types","ComputersFromLocalStorage","Computerscov"],"sources":["/home/hana/Desktop/Projects/level1/space-infoPC/client/src/context/Reducers.js"],"sourcesContent":["import { ACTIONS } from \"./FilterSidebarContext\";\n\nexport const FilterListReducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_COMPUTERS\":\n      return { ...state, products: action.payload }\n    case ACTIONS.ALL:\n      return { ...state, products: action.payload }\n    case ACTIONS.PRICE_ASC:\n      const orderAscending = state.products.sort((p, c) => p.price - c.price);\n      return { ...state, products: orderAscending }\n    case ACTIONS.PRICE_DESC:\n      const orderDescending = state.products.sort((p, c) => c.price - p.price);\n      return { ...state, products: orderDescending }\n    case ACTIONS.IN_STOCK:\n      const inStockOnly = state.products.filter(comp => comp.inStock === true)\n      return { ...state, products: inStockOnly }\n    case ACTIONS.DELETE_FILTER:\n      const productsFromLocalStorage = localStorage.getItem('initialComputers');\n      const productscov = JSON.parse(productsFromLocalStorage);\n      return { ...state, products: productscov }\n    default:\n      return state\n  }\n}\n\n\nexport const FilterReducer = (state, action) => {\n\n  switch (action.type) {\n\n    case ACTIONS.INIT:\n      return { ...state, products: action.payload }\n\n    case ACTIONS.ALL:\n      return { ...state, products: action.payload }\n\n    case ACTIONS.PRICE_ASC:\n      const orderAscending = state.products.sort((p, c) => p.price - c.price);\n      return { ...state, products: orderAscending }\n\n    case ACTIONS.PRICE_DESC:\n      const orderDescending = state.products.sort((p, c) => c.price - p.price);\n      return { ...state, products: orderDescending }\n\n    case ACTIONS.IN_STOCK:\n      const inStockOnly = state.products.filter(comp => comp.inStock === true)\n      return { ...state, products: inStockOnly }\n\n    case ACTIONS.TOGGLE_CATEGORY:\n      const updatedCateg = { ...state.toggle, [action.payload] : !state.toggle[action.payload] };\n      const productsliststorage = localStorage.getItem('initialComputers');\n      const Computerscovs = JSON.parse(productsliststorage);\n      const updatedProducts = Computerscovs.filter(prod => prod.categorie.toLowerCase() === action.payload.toLowerCase());\n      \n      Object.keys(updatedCateg).forEach(key => {\n        if (key !== action.payload && updatedCateg[key] === true) {\n          updatedCateg[key] = false;\n        }\n      });\n      return {\n        ...state,\n        toggle: updatedCateg,\n        products: updatedProducts,\n      };\n\n    case ACTIONS.TOGGLE_TYPE:\n      const updatedTypes = { ...state.toggle, [action.payload]: !state.toggle[action.payload] }\n      const productsliststor = localStorage.getItem('initialComputers');\n      const Computerscovss = JSON.parse(productsliststor);\n      const updatedPro = Computerscovss.filter(prod => prod.type.toLowerCase() === action.payload.toLowerCase());\n\n      Object.keys(updatedTypes).forEach(key => {\n        if (key !== action.payload && updatedTypes[key] === true) {\n          updatedTypes[key] = false;\n        }\n      });\n\n      return {\n        ...state,\n        types: updatedTypes,\n        products: updatedPro,\n      };\n\n      case ACTIONS.DELETE_FILTER:\n        const ComputersFromLocalStorage = localStorage.getItem('initialComputers');\n        const Computerscov = JSON.parse(ComputersFromLocalStorage);\n        return { ...state, products: Computerscov }\n\n    default:\n      return state;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}