{"ast":null,"code":"var _jsxFileName = \"/home/hana/Desktop/Projects/level1/space-infoPC/client/src/pages/register/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { Typography, TextField, Grid, Container, Paper, Button, Box } from '@mui/material';\nimport { RegisterState } from '../../context/RegisterContext';\nimport { Email_Password_Verifcation, Register_Verification } from '../../utils/utilFunctions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GridOptions = [{\n  name: \"username\",\n  lab: \"Username\"\n}, {\n  name: \"email\",\n  lab: \"Email\"\n}, {\n  name: \"password\",\n  lab: \"Password\"\n}, {\n  name: \"first_name\",\n  lab: \"First name\"\n}, {\n  name: \"last_name\",\n  lab: \"Last name\"\n}, {\n  name: \"address\",\n  lab: \"address\"\n}, {\n  name: \"city\",\n  lab: \"City\"\n}, {\n  name: \"state\",\n  lab: \"State\"\n}, {\n  name: \"country\",\n  lab: \"Country\"\n}, {\n  name: \"phone\",\n  lab: \"Phone\"\n}];\nfunction Register() {\n  _s();\n  const {\n    FieldState,\n    DispatchField\n  } = RegisterState();\n  const errorUsername = useRef(null);\n  const errorEmail = useRef(null);\n  const errorPassword = useRef(null);\n  const errorFirstn = useRef(null);\n  const errorLastn = useRef(null);\n  const errorAddress = useRef(null);\n  const errorCity = useRef(null);\n  const errorState = useRef(null);\n  const errorCountry = useRef(null);\n  const errorPhone = useRef(null);\n  const refs = [errorUsername, errorEmail, errorFirstn, errorLastn, errorAddress, errorCity, errorState, errorCountry, errorPhone];\n  console.log(FieldState);\n  const handleRegister = e => {\n    e.preventDefault();\n    const fetch_error = Email_Password_Verifcation(FieldState.email, FieldState.password, errorEmail, errorPassword);\n    if (fetch_error) {\n      return;\n    }\n    //Register_Verification(errorUsername, errorEmail, errorPassword, errorFirstn, errorLastn, errorAddress, errorCity, errorState, errorCountry, errorPhone);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"sm\",\n    sx: {\n      my: 8\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      variant: \"outlined\",\n      sx: {\n        my: {\n          xs: 3,\n          md: 6\n        },\n        p: {\n          xs: 2,\n          md: 3\n        },\n        bgcolor: '#F8F8F8'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        sx: {\n          mb: 5\n        },\n        children: \"Register :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        noValidate: true,\n        onSubmit: handleRegister,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [GridOptions.map((option, index) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            sx: {\n              mb: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              id: option.name,\n              name: option.name,\n              label: option.lab,\n              fullWidth: true,\n              variant: \"standard\",\n              onChange: e => {\n                DispatchField({\n                  type: option.name,\n                  payload: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              ref: refs[index],\n              sx: {\n                color: \"red\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)]\n          }, option.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            sx: {\n              width: \"30%\",\n              m: 'auto',\n              mt: 5\n            },\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"FrprrLwmmA1EMDjK6RQEjKf4zxQ=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useRef","useState","Typography","TextField","Grid","Container","Paper","Button","Box","RegisterState","Email_Password_Verifcation","Register_Verification","GridOptions","name","lab","Register","FieldState","DispatchField","errorUsername","errorEmail","errorPassword","errorFirstn","errorLastn","errorAddress","errorCity","errorState","errorCountry","errorPhone","refs","console","log","handleRegister","e","preventDefault","fetch_error","email","password","my","xs","md","p","bgcolor","mb","map","option","index","type","payload","target","value","color","width","m","mt"],"sources":["/home/hana/Desktop/Projects/level1/space-infoPC/client/src/pages/register/Register.js"],"sourcesContent":["import React, { useRef, useState } from 'react'\nimport { Typography, TextField, Grid, Container, Paper, Button, Box } from '@mui/material';\nimport { RegisterState } from '../../context/RegisterContext';\nimport { Email_Password_Verifcation, Register_Verification } from '../../utils/utilFunctions';\n\n\n\nconst GridOptions = [\n    { name: \"username\", lab: \"Username\" },\n    { name: \"email\", lab: \"Email\" },\n    { name: \"password\", lab: \"Password\" },\n    { name: \"first_name\", lab: \"First name\" },\n    { name: \"last_name\", lab: \"Last name\" },\n    { name: \"address\", lab: \"address\" },\n    { name: \"city\", lab: \"City\" },\n    { name: \"state\", lab: \"State\" },\n    { name: \"country\", lab: \"Country\" },\n    { name: \"phone\", lab: \"Phone\" }\n]\n\nfunction Register() {\n    const { FieldState, DispatchField } = RegisterState();\n\n    const errorUsername = useRef(null);\n    const errorEmail = useRef(null);\n    const errorPassword = useRef(null);\n    const errorFirstn = useRef(null);\n    const errorLastn = useRef(null);\n    const errorAddress = useRef(null);\n    const errorCity = useRef(null);\n    const errorState = useRef(null);\n    const errorCountry = useRef(null);\n    const errorPhone = useRef(null);\n    const refs = [\n        errorUsername,\n        errorEmail,\n        errorFirstn,\n        errorLastn,\n        errorAddress,\n        errorCity,\n        errorState,\n        errorCountry,\n        errorPhone,\n    ]\n    console.log(FieldState)\n\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n        const fetch_error = Email_Password_Verifcation(FieldState.email, FieldState.password ,errorEmail, errorPassword)\n\n        if (fetch_error) {\n            return\n        }\n        //Register_Verification(errorUsername, errorEmail, errorPassword, errorFirstn, errorLastn, errorAddress, errorCity, errorState, errorCountry, errorPhone);\n\n    }\n    return (\n        <Container component=\"main\" maxWidth=\"sm\" sx={{ my: 8 }}>\n            <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 }, bgcolor: '#F8F8F8' }}>\n                <Typography variant=\"h6\" gutterBottom sx={{ mb: 5 }}>\n                    Register :\n                </Typography>\n                <Box component=\"form\" noValidate onSubmit={handleRegister}>\n                    <Grid container spacing={3} >\n                        {GridOptions.map((option, index) => (\n                            <Grid item xs={12} sm={6} sx={{ mb: 1 }} key={option.name}>\n                                <TextField\n                                    required\n                                    id={option.name}\n                                    name={option.name}\n                                    label={option.lab}\n                                    fullWidth\n                                    variant=\"standard\"\n                                    onChange={(e) => { DispatchField({ type: option.name, payload: e.target.value }) }}\n                                />\n                                <Typography variant='caption' ref={refs[index]} sx={{ color: \"red\" }}></Typography>\n\n                            </Grid>\n                        ))\n                        }\n                        <Button type=\"submit\" variant='contained' sx={{ width: \"30%\", m: 'auto', mt: 5 }}>Register</Button>\n                    </Grid>\n                </Box>\n            </Paper>\n        </Container>\n    )\n}\n\nexport default Register"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}